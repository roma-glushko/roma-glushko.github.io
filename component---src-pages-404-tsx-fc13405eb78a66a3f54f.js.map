{"version":3,"file":"component---src-pages-404-tsx-fc13405eb78a66a3f54f.js","mappings":"0NAyBA,EApBsB,WACpB,IAAOA,GAAoBC,EAAAA,EAAAA,gBAAe,cAAnCD,iBAUP,OACE,gBAAC,EAAAE,EAAD,CACEC,UAAU,gBACVC,MAAOJ,EAAiBK,gBAAgBC,gBACxCC,IAAG,qB,8BCkBT,EA3BqB,kBACnBC,EAAAA,cAACC,EAAAA,EAAD,KACED,EAAAA,cAACE,EAAAA,EAAD,CACEC,MAAM,iBACNR,UAAU,iBACVS,KAAM,CACJ,CACEC,KAAK,SACLC,QAAQ,uBAIdN,EAAAA,cAAAA,MAAAA,CAAKL,UAAU,aACbK,EAAAA,cAAAA,OAAAA,CAAML,UAAU,yBACdK,EAAAA,cAACO,EAAD,MACAP,EAAAA,cAAAA,MAAAA,CAAKL,UAAU,qBACbK,EAAAA,cAAAA,KAAAA,KAAAA,aACAA,EAAAA,cAACQ,EAAAA,EAAD,CAAgBC,MAAM,QACtBT,EAAAA,cAAAA,IAAAA,KAAAA,2DACAA,EAAAA,cAACU,EAAAA,EAAD,QAGJV,EAAAA,cAACW,EAAAA,EAAD,CAAwBC,OAAQ,S,uDCqBtC,IAlD+B,SAAC,GAAqB,IAAD,IAAlBA,OAAAA,OAAkB,MAAT,GAAS,EAG9BC,GAEhBpB,EAAAA,EAAAA,gBAAe,cAHjBqB,KACEC,aAAgBF,QAchBG,EAAa,CACf,CACE,QAAS,WACTC,SAAU,EACVZ,KAAM,OACNa,KAASL,EAAL,MAIRD,EAAOO,SAAQ,SAACC,EAAWC,GACzB,MAAwBC,OAAOC,QAAQH,GAAvC,GAAQI,EAAR,KAAcrB,EAAd,KAEAa,EAAWS,KAAK,CACd,QAAS,WACTR,SAAUI,EAAM,EAChBhB,KAAMF,EACNe,KAAK,GAAIL,EAAUW,OAIvB,IAAME,EAAe,CACnB,WAAY,oBACZ,QAAS,iBACTC,gBAAiBX,GAGnB,OACE,gBAAC,IAAD,KACE,0BAAQY,KAAK,uBAAuBC,KAAKC,UAAUJ,O,uFCrCpChB,EAAAA,SAAAA,GACnB,WAAYqB,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAOFC,YAAc,SAACC,GACb,MAAiC,EAAKC,MAA9BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,YACXC,GAAYF,EAElB,EAAKG,SAAS,CACZH,QAASE,IAGXD,EAAYC,EAAW,OAAS,UAhBf,EAmBnBE,OAAS,WACP,OACE,gBAAC,IAAD,MACG,YAA6B,IAA1BC,EAAyB,EAAzBA,MAAOJ,EAAkB,EAAlBA,YACT,EAAKE,SAAS,CACZH,QAAmB,SAAVK,EACTJ,YAAaA,IAGf,IAAMK,EACJ,0BACC,EAAKP,MAAMC,QAAU,mCAAqC,IAE7D,OACE,uBAAKxC,UAAW8C,EAAYC,QAAS,EAAKV,aACxC,uBAAKrC,UAAU,yBACf,uBAAKA,UAAU,yBAEf,yBACEA,UAAU,uBACViC,KAAK,WACLO,QAAmB,SAAVK,EACTG,UAAU,EACV,aAAW,4CAvCvB,EAAKT,MAAQ,CACXC,SAAS,GAJM,EAMlB,OAPkBzB,EAAAA,EAAAA,GAAAA,EAAAA,GAOlB,EAPkBA,CAAsBkC,EAAAA","sources":["webpack://romaglushko.com/./src/components/404/404-image.js","webpack://romaglushko.com/./src/pages/404.tsx","webpack://romaglushko.com/./src/components/theme/breadcrumbs-rich-snippet.js","webpack://romaglushko.com/./src/components/theme/theme-switcher.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\n\nconst NotFoundImage = () => {\n  const {placeholderImage} = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"404/not-found-image.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED, width: 300)\n        }\n      }\n    }\n  `)\n\n  return (\n    <GatsbyImage\n      className=\"not-found-img\"\n      image={placeholderImage.childImageSharp.gatsbyImageData}\n      alt={`Not Found Space`}\n    />\n  )\n}\n\nexport default NotFoundImage\n","import * as React from \"react\"\n\nimport Layout from \"../components/theme/layout\"\nimport Seo from \"../components/seo\"\nimport NotFoundImage from \"../components/404/404-image\"\nimport MainNavigation from \"../components/theme/main-navigation\"\nimport BreadcrumbsRichSnippet from \"../components/theme/breadcrumbs-rich-snippet\"\nimport ThemeSwitcher from \"../components/theme/theme-switcher\"\n\nimport \"../components/404/404.css\"\n\nconst NotFoundPage = (): JSX.Element => (\n  <Layout>\n    <Seo\n      title=\"404: Not Found\"\n      className=\"not-found-page\"\n      meta={[\n        {\n          name: `robots`,\n          content: `noindex,nofollow`,\n        },\n      ]}\n    />\n    <div className=\"container\">\n      <main className=\"row not-found-wrapper\">\n        <NotFoundImage />\n        <div className=\"not-found-content\">\n          <h1>Not Found</h1>\n          <MainNavigation space=\"404\" />\n          <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n          <ThemeSwitcher />\n        </div>\n      </main>\n      <BreadcrumbsRichSnippet crumbs={[]} />\n    </div>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst BreadcrumbsRichSnippet = ({ crumbs = [] }) => {\n  const {\n    site: {\n      siteMetadata: { siteUrl },\n    },\n  } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  let crumbItems = [\n    {\n      \"@type\": \"ListItem\",\n      position: 1,\n      name: \"Home\",\n      item: `${siteUrl}/`,\n    },\n  ]\n\n  crumbs.forEach((crumbItem, idx) => {\n    const [[path, title]] = Object.entries(crumbItem)\n\n    crumbItems.push({\n      \"@type\": \"ListItem\",\n      position: idx + 2, // adjustment for the first home item which is in 1 position\n      name: title,\n      item: `${siteUrl}${path}`,\n    })\n  })\n\n  const schemaJSONLD = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    itemListElement: crumbItems,\n  }\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">{JSON.stringify(schemaJSONLD)}</script>\n    </Helmet>\n  )\n}\n\nexport default BreadcrumbsRichSnippet\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { PureComponent } from \"react\"\nimport { ThemeToggler } from \"gatsby-plugin-dark-mode\"\n\nimport \"./theme-switcher.css\"\n\nexport default class ThemeSwitcher extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      checked: false,\n    }\n  }\n\n  handleClick = (e) => {\n    const { checked, toggleTheme } = this.state\n    const newState = !checked\n\n    this.setState({\n      checked: newState,\n    })\n\n    toggleTheme(newState ? \"dark\" : \"light\")\n  }\n\n  render = () => {\n    return (\n      <ThemeToggler>\n        {({ theme, toggleTheme }) => {\n          this.setState({\n            checked: theme === \"dark\",\n            toggleTheme: toggleTheme,\n          })\n\n          const classNames =\n            \"theme-switcher-toggler\" +\n            (this.state.checked ? \" theme-switcher-toggler--checked\" : \"\")\n\n          return (\n            <div className={classNames} onClick={this.handleClick}>\n              <div className=\"theme-switcher-track\"></div>\n              <div className=\"theme-switcher-thumb\"></div>\n\n              <input\n                className=\"theme-switcher-input\"\n                type=\"checkbox\"\n                checked={theme === \"dark\"}\n                readOnly={true}\n                aria-label=\"Switch between Dark and Light mode\"\n              />\n            </div>\n          )\n        }}\n      </ThemeToggler>\n    )\n  }\n}\n"],"names":["placeholderImage","useStaticQuery","G","className","image","childImageSharp","gatsbyImageData","alt","React","Layout","Seo","title","meta","name","content","NotFoundImage","MainNavigation","space","ThemeSwitcher","BreadcrumbsRichSnippet","crumbs","siteUrl","site","siteMetadata","crumbItems","position","item","forEach","crumbItem","idx","Object","entries","path","push","schemaJSONLD","itemListElement","type","JSON","stringify","props","handleClick","e","state","checked","toggleTheme","newState","setState","render","theme","classNames","onClick","readOnly","PureComponent"],"sourceRoot":""}