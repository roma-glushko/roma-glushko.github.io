{"version":3,"file":"component---src-templates-thought-template-js-f38afcfe7c4e3cd9950f.js","mappings":"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","sources":["webpack://romaglushko.com/./src/components/blog/newsletter-form.js","webpack://romaglushko.com/./src/components/thoughts/thought-author.js","webpack://romaglushko.com/./src/components/thoughts/thought.js","webpack://romaglushko.com/./src/components/thoughts/thought-navigation.js","webpack://romaglushko.com/./src/templates/thoughtTemplate.js"],"sourcesContent":["import React from \"react\"\n\nimport \"./newsletter-form.css\"\n\nconst NewsletterForm = () => {\n  return (\n    <div className=\"newsletter-form\">\n      <iframe\n        src=\"https://romanglushko.substack.com/embed\"\n        loading=\"lazy\"\n        width=\"100%\"\n        height=\"320\"\n        style={{ border: \"1px solid #EEE\" }}\n        frameborder=\"0\"\n        scrolling=\"no\"\n        title=\"Newsletter Form\"\n      ></iframe>\n    </div>\n  )\n}\n\nexport default NewsletterForm\n","import React from \"react\"\nimport Logo from \"../theme/logo\"\n\nimport \"./thought-author.css\"\n\nconst ThoughtAuthor = () => {\n  return (\n    <div className=\"thought-author-wrapper\">\n      <div className=\"logo\">\n        <div className=\"avatar\">\n          <Logo />\n        </div>\n      </div>\n      <div className=\"name\">• Roman Glushko •</div>\n      <p className=\"thought-section-descr\">\n        My thoughts, pieces of advice and life experience <br />\n        that will help you to <strong>overcome</strong> your life struggles\n      </p>\n    </div>\n  )\n}\n\nexport default ThoughtAuthor\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport MainNavigation from \"../theme/main-navigation\"\nimport ThemeSwitcher from \"../theme/theme-switcher\"\n\nimport \"./thought.css\"\nimport \"../theme/content.css\"\n\nconst Thought = (props) => {\n  const {\n    title,\n    timeToRead,\n    publishedHumanDate,\n    publishedFullDate,\n    contentHtml,\n    cover,\n    coverCredits,\n  } = props\n\n  return (\n    <article className=\"thought-wrapper\">\n      <header>\n        <figure className=\"cover\">\n          <div className=\"cover-filter\">\n            <GatsbyImage\n              className=\"cover cover-image\"\n              image={cover}\n              alt={title}\n            />\n          </div>\n          <figcaption\n            className=\"image-title\"\n            dangerouslySetInnerHTML={{ __html: coverCredits }}\n          />\n        </figure>\n        <MainNavigation space={\"thoughts\"} />\n        <h1>{title}</h1>\n        <div className=\"thought-details\">\n          <time className=\"thought-createdat\" dateTime={publishedFullDate}>\n            {publishedHumanDate}\n          </time>\n          <span> • </span>\n          <span className=\"thought-time2read\">{timeToRead}{timeToRead > 1 ? \"mins\": \"min\"} read</span>\n          <div className=\"theme-switcher\">\n            <ThemeSwitcher />\n          </div>\n        </div>\n      </header>\n      <div id=\"intro\" className=\"thought-divider\" />\n      <div\n        className=\"content thought-content\"\n        dangerouslySetInnerHTML={{ __html: contentHtml }}\n      />\n      <div id=\"content-end\" />\n    </article>\n  )\n}\n\nThought.propTypes = {\n  title: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  publishedHumanDate: PropTypes.string.isRequired,\n  publishedFullDate: PropTypes.string.isRequired,\n  contentHtml: PropTypes.string.isRequired,\n}\n\nexport default Thought\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport \"./thought-navigation.css\"\n\nconst ThoughtNavigation = (props) => {\n  const {\n    next: { frontmatter: { title: nextTitle, path: nextUrl } = {} } = {},\n    prev: { frontmatter: { title: prevTitle, path: prevUrl } = {} } = {},\n  } = props\n\n  return (\n    <div className=\"thought-navigation-wrapper\">\n      <nav className=\"thought-navigation\">\n        <div className=\"nav-links\">\n          {nextUrl && (\n            <Link rel=\"next\" className=\"next-thought\" to={nextUrl}>\n              {nextTitle} →\n            </Link>\n          )}\n          {prevUrl && (\n            <Link rel=\"prev\" className=\"prev-thought\" to={prevUrl}>\n              ← {prevTitle}\n            </Link>\n          )}\n          <Link className=\"all-thoughts\" to=\"/thoughts/\">\n            All Thoughts\n          </Link>\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nThoughtNavigation.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n}\n\nexport default ThoughtNavigation\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport ThoughtAuthor from \"../components/thoughts/thought-author\"\nimport Thought from \"../components/thoughts/thought\"\nimport ThoughtNavigation from \"../components/thoughts/thought-navigation\"\nimport Layout from \"../components/theme/layout\"\nimport Footer from \"../components/theme/footer\"\nimport Seo from \"../components/seo\"\nimport NewsletterForm from \"../components/blog/newsletter-form\"\nimport ShareBlock from \"../components/thoughts/share-block\"\nimport BreadcrumbsRichSnippet from \"../components/theme/breadcrumbs-rich-snippet\"\nimport ReadingAnalytics from \"../components/blog/reading-analytics\"\nimport ArticleRichSnippet from \"../components/thoughts/article-rich-snippet\"\n\nimport \"./ThoughtView.css\"\n\nexport default function Template({\n  data,\n  pageContext: { prevThought, nextThought },\n}) {\n  const {\n    markdownRemark: {\n      frontmatter: {\n        path,\n        title,\n        humanDate,\n        fullDate,\n        keywords,\n        cover: {childImageSharp: {gatsbyImageData}},\n        coverCredits,\n      },\n      html,\n      rawMarkdownBody,\n      timeToRead,\n      excerpt,\n      wordCount: { words },\n    },\n  } = data\n\n  return (\n    <Layout>\n      <Seo\n        title={`${title} - Thoughts`}\n        className=\"thought-view-page\"\n        pagePath={path}\n        imagePath={gatsbyImageData.images.fallback.src}\n        ogType=\"article\"\n        description={excerpt}\n        keywords={keywords}\n        meta={[]}\n      />\n      <div className=\"thoughts-title\">\n        <Link to=\"/thoughts/\">Thoughts</Link>\n      </div>\n      <main>\n        <Thought\n          title={title}\n          timeToRead={timeToRead}\n          publishedHumanDate={humanDate}\n          publishedFullDate={fullDate}\n          cover={gatsbyImageData}\n          coverCredits={coverCredits}\n          contentHtml={html}\n        />\n        <ShareBlock title={title} path={path} tags={keywords} />\n        <NewsletterForm />\n      </main>\n      <aside className=\"thought-sidebar\">\n        <ThoughtAuthor />\n        <ThoughtNavigation prev={prevThought} next={nextThought} />\n      </aside>\n      <Footer />\n      <ArticleRichSnippet\n        title={title}\n        path={path}\n        datePublished={fullDate}\n        dateModified={fullDate} // gitLogLatestDate\n        content={rawMarkdownBody}\n        wordCount={words}\n        keywords={keywords}\n        cover={gatsbyImageData}\n        articleSection={\"Thoughts\"}\n        genre={[\n          \"self-improvement\",\n          \"management\",\n          \"thoughts\",\n          \"life experience\",\n          \"life exploration\",\n        ]}\n      />\n      <ReadingAnalytics contentType={`thought`} />\n      <BreadcrumbsRichSnippet\n        crumbs={[{ \"/thoughts/\": \"Thoughts\" }, { [path]: title }]}\n      />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      timeToRead\n      excerpt\n      rawMarkdownBody\n      wordCount {\n        words\n      }\n      frontmatter {\n        path\n        humanDate: date(formatString: \"MMM D, YYYY\")\n        fullDate: date(formatString: \"YYYY-MM-DD\")\n        title\n        keywords\n        cover {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED)\n          }\n        }\n        coverCredits\n      }\n    }\n  }\n`\n"],"names":["className","src","loading","width","height","style","border","frameborder","scrolling","title","props","timeToRead","publishedHumanDate","publishedFullDate","contentHtml","cover","coverCredits","G","image","alt","dangerouslySetInnerHTML","__html","space","dateTime","id","next","frontmatter","nextTitle","nextUrl","path","prev","prevTitle","prevUrl","Link","rel","to","Template","data","pageContext","prevThought","nextThought","markdownRemark","humanDate","fullDate","keywords","gatsbyImageData","childImageSharp","html","rawMarkdownBody","excerpt","words","wordCount","pagePath","imagePath","images","fallback","ogType","description","meta","tags","datePublished","dateModified","content","articleSection","genre","contentType","crumbs"],"sourceRoot":""}