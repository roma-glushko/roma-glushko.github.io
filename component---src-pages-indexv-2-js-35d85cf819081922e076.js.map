{"version":3,"sources":["webpack:///./src/components/blog/blog-teaser.js","webpack:///./src/pages/indexv2.js","webpack:///./src/components/thoughts/thought-teaser.js"],"names":["BlogTeaser","props","title","url","timeToRead","publishedHumanDate","publishedFullDate","excerpt","cover","keywords","className","to","fluid","childImageSharp","dateTime","map","keyword","key","titles","sort","Math","random","IndexPage","recentPosts","recentThoughts","isUniqueTitle","pagePath","id","items","space","iconSize","edges","node","frontmatter","path","humanDate","fullDate","ThoughtTeaser"],"mappings":"qHAAA,oEAqDeA,IA9CI,SAACC,GAAW,IAGvBC,EAQAD,EARAC,MACAC,EAOAF,EAPAE,IACAC,EAMAH,EANAG,WACAC,EAKAJ,EALAI,mBACAC,EAIAL,EAJAK,kBACAC,EAGAN,EAHAM,QACAC,EAEAP,EAFAO,MACAC,EACAR,EADAQ,SAGJ,OACI,6BAASC,UAAU,aACf,kBAAC,OAAD,CAAMA,UAAU,iBAAiBC,GAAIR,GACjC,yBAAKO,UAAU,gBACX,kBAAC,IAAD,CAAKA,UAAU,QAAQE,MAAOJ,EAAMK,gBAAgBD,UAG5D,yBAAKF,UAAU,mBACX,4BAAI,kBAAC,OAAD,CAAMC,GAAIR,GAAMD,IACpB,yBAAKQ,UAAU,gBACX,0BAAMA,UAAU,kBAAkBI,SAAUR,GAAoBD,GAChE,qCACA,0BAAMK,UAAU,kBAAkBN,EAAlC,cAEJ,uBAAGM,UAAU,eAAeH,GAC5B,wBAAIG,UAAU,aACTD,EAASM,KAAI,SAAAC,GAAO,OACjB,wBAAIC,IAAKd,EAAMa,GAAUA,W,w2QClB3CE,G,UAAsB,CACxB,mBACA,wBACA,uBACA,WACA,iBACA,sBACA,gCACA,gBACA,0BACA,oBACA,oBACA,wBACA,oBACA,iBACA,gBACA,oBACA,oBACA,0BACA,sBACA,oBAtB4BC,MAAK,kBAAMC,KAAKC,SAAW,OA8L5CC,UArKG,WAAO,IAAD,SACbC,EADa,EACbA,YAAaC,EADA,EACAA,eAiEpB,OACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKtB,MAAM,oGAAoGuB,eAAe,EAAMf,UAAU,eAAegB,SAAS,MACtK,0BAAMhB,UAAU,cACZ,yBAAKA,UAAU,SACX,yBAAKiB,GAAG,cAAcjB,UAAU,gCAC5B,kBAAC,IAAD,MACA,4BAAQA,UAAU,cACd,yBAAKA,UAAU,QACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,QAGR,wBAAIA,UAAU,QACV,0BAAMA,UAAU,cAAhB,SADJ,IAC8C,0BAAMA,UAAU,eAAhB,YAE9C,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAmBkB,MAAOV,KAE9B,kBAAC,IAAD,CAAgBW,MAAO,aACvB,kBAAC,IAAD,CAAaC,SAAS,OACtB,yBAAKpB,UAAU,kBACX,kBAAC,IAAD,UAKhB,yBAAKA,UAAU,UACX,6BACI,uBAAGA,UAAU,OAAb,QACA,kDACA,6GAEJ,6BACI,wBAAIA,UAAU,kBAAd,iBACA,6BACI,0OACA,6IACA,yBAAKA,UAAU,gBACVa,EAAYQ,MAAMhB,KAAI,gBAAEiB,EAAF,EAAEA,KAAF,OACnB,kBAAC,IAAD,CACIf,IAAKe,EAAKL,GACVzB,MAAO8B,EAAKC,YAAY/B,MACxBC,IAAK6B,EAAKC,YAAYC,KACtB9B,WAAY4B,EAAK5B,WACjBC,mBAAoB2B,EAAKC,YAAYE,UACrC7B,kBAAmB0B,EAAKC,YAAYG,SACpC7B,QAASyB,EAAKC,YAAY1B,QAC1BC,MAAOwB,EAAKC,YAAYzB,MACxBC,SAAUuB,EAAKC,YAAYxB,iBAM/C,6BACI,wBAAIC,UAAU,kBAAd,iBACA,6BACI,0LACA,iIAEA,yBAAKA,UAAU,mBACVc,EAAeO,MAAMhB,KAAI,gBAAEiB,EAAF,EAAEA,KAAF,OACtB,kBAAC,IAAD,CACIf,IAAKe,EAAKL,GACVzB,MAAO8B,EAAKC,YAAY/B,MACxBC,IAAK6B,EAAKC,YAAYC,KACtB9B,WAAY4B,EAAK5B,WACjBC,mBAAoB2B,EAAKC,YAAYE,UACrC7B,kBAAmB0B,EAAKC,YAAYG,SACpC7B,QAASyB,EAAKzB,QACdC,MAAOwB,EAAKC,YAAYzB,cAY5C,6BACI,wBAAIE,UAAU,kBAAd,eACA,6BACI,gJACA,2DAFJ,sBASZ,kBAAC,IAAD,S,kFC1MR,oEA6Ce2B,IAtCO,SAACpC,GAAW,IAG1BC,EAOAD,EAPAC,MACAC,EAMAF,EANAE,IACAC,EAKAH,EALAG,WACAC,EAIAJ,EAJAI,mBACAC,EAGAL,EAHAK,kBACAC,EAEAN,EAFAM,QACAC,EACAP,EADAO,MAGJ,OACI,6BAASE,UAAU,gBACf,4BAAI,kBAAC,OAAD,CAAMC,GAAIR,GAAMD,IACpB,yBAAKQ,UAAU,mBACX,0BAAMA,UAAU,oBAAoBI,SAAUR,GAAoBD,GAClE,qCACA,0BAAMK,UAAU,qBAAqBN,EAArC,cAEJ,kBAAC,OAAD,CAAMO,GAAIR,GACN,yBAAKO,UAAU,gBACX,kBAAC,IAAD,CAAKA,UAAU,QAAQE,MAAOJ,EAAMK,gBAAgBD,UAG5D,uBAAGF,UAAU,kBAAkBH","file":"component---src-pages-indexv-2-js-35d85cf819081922e076.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport \"./blog-teaser.css\"\n\nconst BlogTeaser = (props) => {\n\n    const {\n        title,\n        url,\n        timeToRead,\n        publishedHumanDate,\n        publishedFullDate,\n        excerpt,\n        cover,\n        keywords,\n    } = props;\n\n    return (\n        <article className=\"blog-item\">\n            <Link className=\"article-header\" to={url}>\n                <div className=\"cover-filter\">\n                    <Img className=\"cover\" fluid={cover.childImageSharp.fluid} />\n                </div>\n            </Link>\n            <div className=\"article-details\">\n                <h2><Link to={url}>{title}</Link></h2>\n                <div className=\"blog-details\">\n                    <time className=\"blog-created-at\" dateTime={publishedFullDate}>{publishedHumanDate}</time>\n                    <span> • </span>\n                    <span className=\"blog-time2read\">{timeToRead} min read</span>\n                </div>\n                <p className=\"blog-digest\">{excerpt}</p>\n                <ul className=\"blog-tags\">\n                    {keywords.map(keyword => (\n                        <li key={url + keyword}>{keyword}</li>\n                    ))}\n                </ul>\n            </div>\n        </article>\n    );\n};\n\nBlogTeaser.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    timeToRead: PropTypes.number.isRequired,\n    publishedDate: PropTypes.string.isRequired,\n    excerpt: PropTypes.string.isRequired,\n  };\n\nexport default BlogTeaser;","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/theme/layout\"\nimport SEO from \"../components/seo\"\nimport PersonRichSnippet from \"../components/homepage/person-rich-snippet\"\nimport Avatar from \"../components/homepage/avatar\"\nimport ThemeSwitcher from \"../components/theme/theme-switcher\"\nimport ReactRotatingText from \"react-rotating-text\"\nimport MainNavigation from \"../components/theme/main-navigation\"\nimport BlogTeaser from \"../components/blog/blog-teaser\"\nimport ThoughtTeaser from \"../components/thoughts/thought-teaser\"\nimport SocialLinks from \"../components/homepage/social-links\"\nimport NNBackground from \"../components/nn-design/nn-background\"\n\nimport \"./indexv2.css\"\n\nconst shuffleArray = arr => arr.sort(() => Math.random() - 0.5);\n\nconst titles = shuffleArray([\n    'Web Developer 🛠',\n    'Magento Specialist 🛒',\n    'Golang Enthusiast 🐹',\n    'Human 🧔',\n    'ML Engineer 🔬',\n    'Passive Traveler 🏕',\n    'Open Source Lover 👨‍👩‍👧‍👦',\n    'Matzah Fan ✡️',\n    '5x Magento Certified 🏅',\n    'Problem Solver 🧠',\n    'Torah Follower 🕎',\n    'eCommerce Explorer 💳',\n    'SEO Strategist 🔎',\n    'Tea Drinker 🍵',\n    'Pythonista 🐍',\n    'Idea Generator 💡',\n    'Scooter Driver 🛴',\n    'Software Engineer 👨‍💻',\n    'Life Explorer 🧗‍♂️',\n    'Rookie Hacker 🔐',\n])\n\nconst IndexPage = () => {\n    const {recentPosts, recentThoughts} = useStaticQuery(\n        graphql`\n          query {\n            recentPosts: allMarkdownRemark(\n                sort: {order: DESC, fields: [frontmatter___date]}, \n                limit: 2, \n                filter: {\n                    fileAbsolutePath: {regex: \"/(blog)/\"}, \n                    frontmatter: {published: {eq: true}}\n                }) {\n                    edges {\n                        node {\n                            id\n                            timeToRead\n                            frontmatter {\n                            humanDate: date(formatString: \"MMM D, YYYY\")\n                            fullDate: date(formatString: \"YYYY-MM-DD\")\n                            path\n                            title\n                            keywords\n                            excerpt\n                            cover {\n                                childImageSharp {\n                                  fluid(maxWidth: 400) {\n                                    ...GatsbyImageSharpFluid\n                                  }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            recentThoughts: allMarkdownRemark(\n                    sort: {order: DESC, fields: [frontmatter___date]}, \n                    limit: 2, \n                    filter: {\n                        fileAbsolutePath: {regex: \"/(thoughts)/\"}, \n                        frontmatter: {published: {eq: true}}\n                    }) {\n                        edges {\n                            node {\n                                id\n                                timeToRead\n                                excerpt(pruneLength: 100)\n                                frontmatter {\n                                    humanDate: date(formatString: \"MMM D, YYYY\")\n                                    fullDate: date(formatString: \"YYYY-MM-DD\")\n                                    path\n                                    title\n                                    keywords\n                                    cover {\n                                        childImageSharp {\n                                        fluid(maxWidth: 400) {\n                                            ...GatsbyImageSharpFluid\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n          }\n        `\n      )\n    \n    return (\n    <Layout>\n        <SEO title=\"Roman Glushko - Machine Learning Engineer, Magento eCommerce Software Developer and Life Explorer\" isUniqueTitle={true} className=\"home-page-v2\" pagePath=\"/\" />\n        <main className=\"homepagev2\">\n            <div className=\"intro\">\n                <div id=\"hero-header\" className=\"hero-header homepage-sidebar\">\n                    <NNBackground />\n                    <figure className=\"hero-intro\">\n                        <div className=\"logo\">\n                            <div className=\"avatar\">\n                                <Avatar />\n                            </div>\n                        </div>\n                        <h1 className=\"name\">\n                            <span className=\"first-name\">Roman</span> <span className=\"second-name\">Glushko</span>\n                        </h1>\n                        <div className=\"title\">\n                            <ReactRotatingText items={titles} />\n                        </div>\n                        <MainNavigation space={\"homepage\"} />\n                        <SocialLinks iconSize=\"sm\" />\n                        <div className=\"theme-switcher\">\n                            <ThemeSwitcher />\n                        </div>\n                    </figure>\n                </div>\n            </div>\n            <div className=\"mylife\">\n                <div>\n                    <p className=\"hey\">Hey,</p>\n                    <p>My name is Roman 👋</p>\n                    <p>I'm a Machine Learning and Software Engineer, Science Geek and Life Explorer.</p>\n                </div>\n                <div>\n                    <h2 className=\"activity-title\">Learn & Share</h2>\n                    <div>\n                        <p>I'm a life-time learner interested in a broad variety of topics: Machine and Deep Learning, Science-related Theory, Computer Science, Software Engineering, Distributed System Design, eCommerce and so on.</p>\n                        <p>When I have spare time, I enjoy putting together my knowledge about those topics and share with other people. </p>\n                        <div className=\"recent-posts\">\n                            {recentPosts.edges.map(({node}) => (\n                                <BlogTeaser\n                                    key={node.id}\n                                    title={node.frontmatter.title}\n                                    url={node.frontmatter.path}\n                                    timeToRead={node.timeToRead}\n                                    publishedHumanDate={node.frontmatter.humanDate}\n                                    publishedFullDate={node.frontmatter.fullDate}\n                                    excerpt={node.frontmatter.excerpt}\n                                    cover={node.frontmatter.cover}\n                                    keywords={node.frontmatter.keywords}\n                                />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <h2 className=\"activity-title\">Think & Write</h2>\n                    <div>\n                        <p>Another thing I like to do is to explore this worlds, think about its components, their interconnections and finally capture my observations and thoughts. </p>\n                        <p>There thoughts are usually about self-development, management and people perceptions and mindsets.</p>\n\n                        <div className=\"recent-thoughts\">\n                            {recentThoughts.edges.map(({node}) => (\n                                <ThoughtTeaser\n                                    key={node.id}\n                                    title={node.frontmatter.title}\n                                    url={node.frontmatter.path}\n                                    timeToRead={node.timeToRead}\n                                    publishedHumanDate={node.frontmatter.humanDate}\n                                    publishedFullDate={node.frontmatter.fullDate}\n                                    excerpt={node.excerpt}\n                                    cover={node.frontmatter.cover}\n                                />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                {/* <div>\n                    <h2>Code & Open Source</h2>\n                </div> */}\n                {/* <div>\n                    <h2>Experiment & Deploy</h2>\n                </div> */}\n                <div>\n                    <h2 className=\"activity-title\">Work & Help</h2>\n                    <div>\n                        <p>If you have a great challenge to solve with Machine Learning and Software Engineering, feel free to let me know! </p>\n                        <p>Here is my CVs, by the way: </p>\n\n                        Insert CVs here\n                    </div>\n                </div>\n            </div>\n        </main>\n        <PersonRichSnippet />\n    </Layout>)\n}\n\n\nexport default IndexPage","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport \"./thought-teaser.css\"\n\nconst ThoughtTeaser = (props) => {\n\n    const {\n        title,\n        url,\n        timeToRead,\n        publishedHumanDate,\n        publishedFullDate,\n        excerpt,\n        cover,\n    } = props;\n\n    return (\n        <article className=\"thought-item\">\n            <h2><Link to={url}>{title}</Link></h2>\n            <div className=\"thought-details\">\n                <time className=\"thought-createdat\" dateTime={publishedFullDate}>{publishedHumanDate}</time>\n                <span> • </span>\n                <span className=\"thought-time2read\">{timeToRead} min read</span>\n            </div>\n            <Link to={url}>\n                <div className=\"cover-filter\">\n                    <Img className=\"cover\" fluid={cover.childImageSharp.fluid} />\n                </div>\n            </Link>\n            <p className=\"thought-digest\">{excerpt}</p>\n        </article>\n    );\n};\n\nThoughtTeaser.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    timeToRead: PropTypes.number.isRequired,\n    publishedDate: PropTypes.string.isRequired,\n    excerpt: PropTypes.string.isRequired,\n}\n\nexport default ThoughtTeaser"],"sourceRoot":""}