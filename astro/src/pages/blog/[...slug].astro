---
import type { CollectionEntry } from 'astro:content';

import BlogPostLayout from '@layouts/BlogPostLayout.astro';
import BlogComments from '@components/blog/BlogComments';
import BlogContent from '@components/blog/BlogContent.astro';
import BlogNavigation from '@components/blog/BlogNavigation.astro';
import { getBlogPosts } from 'src/content/collections';

export async function getStaticPaths() {
	const posts = await getBlogPosts();
	const postCount = posts.length
	
	return posts.map((post, idx) => {
		const prevPost = (idx - 1) >= 0 ? posts[idx - 1] : undefined
		const nextPost = (idx + 1) < postCount ? posts[idx + 1] : undefined

		return {
			params: { slug: post.slug },
			props: {
				"prev": prevPost,
				"current": post,
				"next": nextPost,
			},
		}
	});
}

export interface Props {
	prev?: CollectionEntry<'blog'>;
	current: CollectionEntry<'blog'>;
	next?: CollectionEntry<'blog'>;
}

const {prev, current, next} = Astro.props;
const { Content, remarkPluginFrontmatter: { timeToReadMin } } = await current.render();
const {title, excerpt, pubDate, keywords, cover} = current.data
---
<BlogPostLayout title={title} description={excerpt} keywords={keywords} image={cover.image}>
	<main>
		<BlogContent title={title} pubDate={pubDate} keywords={keywords} cover={cover} timeToReadMin={timeToReadMin}>
			<Content />
		</BlogContent>
		<!-- <ShareBlock title={title} path={path} tags={keywords} /> -->
		<!-- <NewsletterForm /> -->
		<BlogComments client:visible />
		<aside class="blogpost-sidebar">
			<BlogNavigation prev={prev} next={next} />
		</aside>
	</main>
</BlogPostLayout>
