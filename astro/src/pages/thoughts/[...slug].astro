---
import { CollectionEntry, getCollection } from 'astro:content';

import ThoughtContent from '@components/thoughts/ThoughtContent.astro';
import ThoughtPostLayout from '@layouts/ThoughtPostLayout.astro';

import '../../styles/thoughtView.css'
import BreadcrumbSnippet from '@components/BreadcrumbSnippet.astro';
import { getBlogUrl } from 'src/content/routing';
import { getThoughts } from 'src/content/collections';
import ThoughtAuthor from '@components/thoughts/ThoughtAuthor.astro';
import ThoughtNavigation from '@components/thoughts/ThoughtNavigation.astro';

export async function getStaticPaths() {
	const posts = await getThoughts();
	const postCount = posts.length
  
	return posts.map((post, idx) => {
		const prevPost = (idx - 1) >= 0 ? posts[idx - 1] : undefined
		const nextPost = (idx + 1) < postCount ? posts[idx + 1] : undefined

		return {
			params: { slug: post.slug },
			props: {
				"prev": prevPost,
				"current": post,
				"next": nextPost,
			},
		}
	});
}

export interface Props {
	prev?: CollectionEntry<'blog'>;
	current: CollectionEntry<'blog'>;
	next?: CollectionEntry<'blog'>;
}

const {prev, current, next} = Astro.props;
const { Content, remarkPluginFrontmatter: { timeToReadMin } } = await current.render();
const {title, excerpt, pubDate, keywords, cover} = current.data
const slug = current.slug
---
<ThoughtPostLayout
  title={`${title}`}
  description={excerpt}
  keywords={keywords}
  image={cover.image}
>
  <main>
    <ThoughtContent
      title={title}
      pubDate={pubDate}
      cover={cover}
      timeToReadMin={timeToReadMin}
    >
        <Content />
    </ThoughtContent>
    <!-- <ShareBlock title={title} path={path} tags={keywords} /> -->
    <!-- <NewsletterForm /> -->
  </main>
  <aside class="thought-sidebar">
    <ThoughtAuthor />
    <ThoughtNavigation prev={prev} next={next} />
  </aside>
  <BreadcrumbSnippet crumbs={[{ "/thoughts/": "Thoughts" }, { [getBlogUrl(slug)]: title }]} />
</ThoughtPostLayout>