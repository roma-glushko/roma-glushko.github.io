{"version":3,"file":"component---src-pages-blog-js-eb244082ad4e8ad8b504.js","mappings":"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","sources":["webpack://romaglushko.com/./src/components/blog/blog-teaser.js","webpack://romaglushko.com/./src/components/theme/breadcrumbs-rich-snippet.js","webpack://romaglushko.com/./src/components/theme/footer.js","webpack://romaglushko.com/./src/components/theme/logo.js","webpack://romaglushko.com/./src/components/theme/theme-switcher.js","webpack://romaglushko.com/./src/components/theme/view-page-header.js","webpack://romaglushko.com/./src/pages/blog.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport \"./blog-teaser.css\"\n\nconst BlogTeaser = (props) => {\n  const {\n    title,\n    url,\n    timeToRead,\n    publishedHumanDate,\n    publishedFullDate,\n    excerpt,\n    cover,\n    keywords,\n  } = props\n\n  return (\n    <article className=\"blog-item\">\n      <Link className=\"article-header\" to={url}>\n        <div className=\"cover-filter\">\n          <GatsbyImage className=\"cover\" image={cover} alt={title} />\n        </div>\n      </Link>\n      <div className=\"article-details\">\n        <h2>\n          <Link to={url}>{title}</Link>\n        </h2>\n        <div className=\"blog-details\">\n          <time className=\"blog-created-at\" dateTime={publishedFullDate}>\n            {publishedHumanDate}\n          </time>\n          <span> • </span>\n          <span className=\"blog-time2read\">{timeToRead}{timeToRead > 1 ? \"mins\": \"min\"} read</span>\n        </div>\n        <p className=\"blog-digest\">{excerpt}</p>\n        <ul className=\"blog-tags\">\n          {keywords.map((keyword) => (\n            <li key={url + keyword}>{keyword}</li>\n          ))}\n        </ul>\n      </div>\n    </article>\n  )\n}\n\nBlogTeaser.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  publishedFullDate: PropTypes.string.isRequired,\n  publishedHumanDate: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n}\n\nexport default BlogTeaser\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst BreadcrumbsRichSnippet = ({ crumbs = [] }) => {\n  const {\n    site: {\n      siteMetadata: { siteUrl },\n    },\n  } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  let crumbItems = [\n    {\n      \"@type\": \"ListItem\",\n      position: 1,\n      name: \"Home\",\n      item: `${siteUrl}/`,\n    },\n  ]\n\n  crumbs.forEach((crumbItem, idx) => {\n    const [[path, title]] = Object.entries(crumbItem)\n\n    crumbItems.push({\n      \"@type\": \"ListItem\",\n      position: idx + 2, // adjustment for the first home item which is in 1 position\n      name: title,\n      item: `${siteUrl}${path}`,\n    })\n  })\n\n  const schemaJSONLD = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    itemListElement: crumbItems,\n  }\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">{JSON.stringify(schemaJSONLD)}</script>\n    </Helmet>\n  )\n}\n\nexport default BreadcrumbsRichSnippet\n","import React from \"react\"\nimport SocialLinks from \"../homepage/social-links\"\n\nimport \"./footer.css\"\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"footer-wrapper\">\n        <SocialLinks iconSize=\"2x\" />\n        <div className=\"copyright\">\n          Roman Glushko © 1996 - {new Date().getFullYear()} <br />\n          <a\n            rel=\"license\"\n            href=\"https://creativecommons.org/licenses/by/4.0/\"\n            title=\"Content is published under CC BY 4.0 license\"\n          >\n            CC BY 4.0\n          </a>\n        </div>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\n\nconst Logo = () => {\n  // TODO: parametrize and unify this component with Avatar one\n  const { placeholderImage } = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"homepage/photo3.jpg\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED, width: 150)\n        }\n      }\n    }\n  `)\n\n  return (\n    <GatsbyImage\n      className=\"logo-img\"\n      image={placeholderImage.childImageSharp.gatsbyImageData}\n      alt={`Roman Glushko`}\n    />\n  )\n}\n\nexport default Logo\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { PureComponent } from \"react\"\nimport { ThemeToggler } from \"gatsby-plugin-dark-mode\"\n\nimport \"./theme-switcher.css\"\n\nexport default class ThemeSwitcher extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      checked: false,\n    }\n  }\n\n  handleClick = (e) => {\n    const { checked, toggleTheme } = this.state\n    const newState = !checked\n\n    this.setState({\n      checked: newState,\n    })\n\n    toggleTheme(newState ? \"dark\" : \"light\")\n  }\n\n  render = () => {\n    return (\n      <ThemeToggler>\n        {({ theme, toggleTheme }) => {\n          this.setState({\n            checked: theme === \"dark\",\n            toggleTheme: toggleTheme,\n          })\n\n          const classNames =\n            \"theme-switcher-toggler\" +\n            (this.state.checked ? \" theme-switcher-toggler--checked\" : \"\")\n\n          return (\n            <div className={classNames} onClick={this.handleClick}>\n              <div className=\"theme-switcher-track\"></div>\n              <div className=\"theme-switcher-thumb\"></div>\n\n              <input\n                className=\"theme-switcher-input\"\n                type=\"checkbox\"\n                checked={theme === \"dark\"}\n                readOnly={true}\n                aria-label=\"Switch between Dark and Light mode\"\n              />\n            </div>\n          )\n        }}\n      </ThemeToggler>\n    )\n  }\n}\n","import React from \"react\"\nimport Logo from \"../theme/logo\"\n\nimport \"./view-page-header.css\"\n\n// todo: refactor name of the component. This header is placed not only on the view pages but on the listings\n\nconst ViewPageHeader = ({ spaceTitle, spaceLink, isListing = false }) => {\n  return (\n    <div className=\"view-page-header\">\n      <div className=\"view-page-header-wrapper\">\n        <div className=\"logo-wrapper\">\n          <div className=\"logo\">\n            <Logo />\n          </div>\n          <div className=\"name\">\n            <a href={spaceLink} title=\"back to blog\">\n              Roman <br /> Glushko\n            </a>\n          </div>\n        </div>\n        {isListing && (\n          <h1 className=\"blog-title\">\n            <a href={spaceLink} title=\"back to the homepage\">\n              {spaceTitle}\n            </a>\n          </h1>\n        )}\n        {!isListing && (\n          <h2 className=\"blog-title\">\n            <a href={spaceLink} title=\"back to the homepage\">\n              {spaceTitle}\n            </a>\n          </h2>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ViewPageHeader\n","import React, { Component } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/theme/layout\"\nimport Seo from \"../components/seo\"\nimport ViewPageHeader from \"../components/theme/view-page-header\"\nimport MainNavigation from \"../components/theme/main-navigation\"\nimport BlogTeaser from \"../components/blog/blog-teaser\"\nimport ThemeSwitcher from \"../components/theme/theme-switcher\"\nimport BreadcrumbsRichSnippet from \"../components/theme/breadcrumbs-rich-snippet\"\nimport Footer from \"../components/theme/footer\"\n\nimport \"./blog.css\"\n\nclass BlogListPage extends Component {\n  render() {\n    const {\n      data: {\n        socialImage,\n        allMarkdownRemark: { edges },\n      },\n    } = this.props\n\n    return (\n      <Layout>\n        <Seo\n          title=\"Blog\"\n          pagePath=\"/blog/\"\n          className=\"blog-list-page\"\n          description=\"Technical blog about machine learning, data science, math and software engineering\"\n          imagePath={socialImage.publicURL}\n          keywords={[\n            \"technical blog\",\n            \"machine learning blog\",\n            \"math\",\n            \"engineering\",\n            \"data science\",\n            \"roman glushko blog\",\n            \"roma glushko blog\",\n          ]}\n          meta={[]}\n        />\n        <div className=\"blog-listing-wrapper\">\n          <aside className=\"blog-sidebar\">\n            <div className=\"blog-header\">\n              <ViewPageHeader\n                spaceTitle=\"Blog\"\n                spaceLink=\"/blog/\"\n                isListing={true}\n              />\n              <MainNavigation space={\"blog\"} />\n            </div>\n            <div className=\"blog-intro\">\n              Technical notes about machine learning, data science, math and\n              software engineering. Recording what I learn everyday.\n            </div>\n            <div className=\"misc\">\n              <div className=\"theme-switcher\">\n                <ThemeSwitcher />\n              </div>\n            </div>\n          </aside>\n          <main\n            className={`blog-list blog-grid ${!edges.length ? \"no-posts\" : \"\"}`}\n          >\n            {!edges.length && (\n              <div className=\"no-posts-placeholder\">\n                Great posts will be here as soon as my muse comes back to me{\" \"}\n                <span role=\"img\" aria-label=\"magic will happen soon\">\n                  💫\n                </span>{\" \"}\n                <br />\n                Come back soon{\" \"}\n                <span aria-label=\"bye\" role=\"img\">\n                  👋\n                </span>\n              </div>\n            )}\n            {edges.map(({ node: {id, timeToRead, frontmatter: {title, path, humanDate, fullDate, excerpt, keywords, cover: {childImageSharp: {gatsbyImageData}}}, } }) => (\n              <BlogTeaser\n                key={id}\n                title={title}\n                url={path}\n                timeToRead={timeToRead}\n                publishedHumanDate={humanDate}\n                publishedFullDate={fullDate}\n                excerpt={excerpt}\n                cover={gatsbyImageData}\n                keywords={keywords}\n              />\n            ))}\n          </main>\n          <div className=\"clearfix\" />\n        </div>\n        <Footer />\n        <BreadcrumbsRichSnippet crumbs={[{ \"/blog/\": \"Blog\" }]} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogListPage\n\nexport const pageQuery = graphql`\n  query BlogListQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: {\n        fileAbsolutePath: { regex: \"/(blog)/\" }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          frontmatter {\n            humanDate: date(formatString: \"MMM D, YYYY\")\n            fullDate: date(formatString: \"YYYY-MM-DD\")\n            path\n            title\n            keywords\n            excerpt\n            cover {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED, width: 620, placeholder: BLURRED)\n              }\n            }\n          }\n        }\n      }\n    }\n    socialImage: file(\n      relativePath: { eq: \"blog/roman-glushko-in-the-process-of-work.jpg\" }\n    ) {\n      publicURL\n    }\n  }\n`\n"],"names":["props","title","url","timeToRead","publishedHumanDate","publishedFullDate","excerpt","cover","keywords","className","Link","to","G","image","alt","dateTime","map","keyword","key","crumbs","siteUrl","useStaticQuery","site","siteMetadata","crumbItems","position","name","item","forEach","crumbItem","idx","Object","entries","path","push","schemaJSONLD","itemListElement","type","JSON","stringify","iconSize","Date","getFullYear","rel","href","placeholderImage","childImageSharp","gatsbyImageData","ThemeSwitcher","handleClick","e","state","checked","toggleTheme","newState","setState","render","theme","classNames","onClick","readOnly","PureComponent","spaceTitle","spaceLink","isListing","BlogListPage","this","data","socialImage","edges","allMarkdownRemark","pagePath","description","imagePath","publicURL","meta","space","length","role","node","id","frontmatter","humanDate","fullDate","Component"],"sourceRoot":""}