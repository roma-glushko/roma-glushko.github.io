{"version":3,"sources":["webpack:///./src/components/thoughts/logo.js","webpack:///./src/components/thoughts/thought-author.js","webpack:///./src/components/thoughts/thought-navigation.js","webpack:///./src/templates/thoughtTemplate.js"],"names":["Logo","data","className","fluid","placeholderImage","childImageSharp","ThoughtAuthor","ThoughtNavigation","props","console","log","next","frontmatter","nextTitle","title","nextUrl","path","prev","prevTitle","prevUrl","rel","to","Template","markdownRemark","html","timeToRead","pageContext","prevThought","nextThought","date","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"uJA+BeA,EAhBF,WACT,IAAMC,EAAI,OAYV,OAAO,kBAAC,IAAD,CAAKC,UAAU,WAAWC,MAAUF,EAAKG,iBAAiBC,gBAAgBF,S,UCTtEG,IAdO,WACpB,OACE,yBAAKJ,UAAU,0BACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,UACX,kBAAC,EAAD,QAGR,yBAAKA,UAAU,QAAf,iBACA,uBAAGA,UAAU,yBAAb,yCAA2E,6BAA3E,gCAA6G,sCAA7G,Q,0FC+BOK,G,UAvCW,SAAAC,GACtBC,QAAQC,IAAIF,GADmB,MAS7BA,EANFG,KAH+B,gBAK3B,GAL2B,GAI7BC,YAAsBC,GAJO,aAIsB,GAJtB,GAIdC,MAAwBC,EAJV,EAIIC,KAJJ,EAS7BR,EAHFS,KAN+B,gBAQ3B,GAR2B,GAO7BL,YAAsBM,GAPO,aAOsB,GAPtB,GAOdJ,MAAwBK,EAPV,EAOIH,KAIrC,GAAKD,GAAYI,EAEjB,OACE,yBAAKjB,UAAU,8BACX,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,aACdiB,GACC,kBAAC,OAAD,CAAMC,IAAI,OAAOlB,UAAU,eAAemB,GAAIF,GAA9C,KACOD,GAGRH,GACG,kBAAC,OAAD,CAAMK,IAAI,OAAOlB,UAAU,eAAemB,GAAIN,GACzCF,EADL,MAIF,kBAAC,OAAD,CAAMX,UAAU,eAAemB,GAAG,aAAlC,qB,wDCtBG,SAASC,EAAT,GAGX,IAAD,IAFDrB,KAAOsB,eAAiBX,EAEvB,EAFuBA,YAAaY,EAEpC,EAFoCA,KAAMC,EAE1C,EAF0CA,WAE1C,IADDC,YAAeC,EACd,EADcA,YAAaC,EAC3B,EAD2BA,YAE5B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKd,MAASF,EAAYE,MAAQ,cAAeZ,UAAU,sBACzD,yBAAKA,UAAU,kBACb,kBAAC,OAAD,CAAMmB,GAAG,aAAT,aAEF,6BAASnB,UAAU,mBACjB,4BAAKU,EAAYE,OACjB,yBAAKZ,UAAU,mBACb,0BAAMA,UAAU,qBAAqBU,EAAYiB,MACjD,qCACA,0BAAM3B,UAAU,qBAAqBuB,EAArC,aACA,yBAAKvB,UAAU,kBACb,kBAAC,IAAD,QAGJ,yBAAKA,UAAU,oBACf,yBACIA,UAAU,kBACV4B,wBAAyB,CAAEC,OAAQP,MAGzC,2BAAOtB,UAAU,mBACf,kBAAC,IAAD,MACA,kBAAC,EAAD,CAAmBe,KAAMU,EAAahB,KAAMiB,MAvCtD,kFA6CO,IAAMI,EAAS,c","file":"component---src-templates-thought-template-js-09dccd9b5ee181dc4be8.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n    const data = useStaticQuery(graphql `\n    query {\n      placeholderImage: file(relativePath: { eq: \"homepage/photo.jpeg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n    return <Img className=\"logo-img\" fluid = { data.placeholderImage.childImageSharp.fluid } />\n}\n\nexport default Logo","import React from \"react\";\nimport Logo from \"./logo\"\n\nimport \"./thought-author.css\"\n\nconst ThoughtAuthor = () => {\n  return (\n    <div className=\"thought-author-wrapper\">\n        <div className=\"logo\">\n            <div className=\"avatar\">\n                <Logo />\n            </div>\n        </div>\n        <div className=\"name\">Roman Glushko</div>\n        <p className=\"thought-section-descr\">Unpopular and totally wrong thoughts. <br/> Yeah, I know it. And that's <span>fine</span>.</p>\n    </div>\n  );\n};\n\nexport default ThoughtAuthor;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nimport \"./thought-navigation.css\"\n\nconst ThoughtNavigation = props => {\n    console.log(props)\n  const {\n    next: {\n      frontmatter: { title: nextTitle, path: nextUrl } = {}\n    } = {},\n    prev: {\n      frontmatter: { title: prevTitle, path: prevUrl } = {}\n    } = {}\n  } = props;\n\n  if (!nextUrl && !prevUrl) return;\n\n  return (\n    <div className=\"thought-navigation-wrapper\">\n        <nav className=\"thought-navigation\">\n          <div className=\"nav-links\">\n          {prevUrl && (\n            <Link rel=\"prev\" className=\"prev-thought\" to={prevUrl}>\n                ← {prevTitle} \n            </Link>\n          )}\n          {nextUrl && (\n              <Link rel=\"next\" className=\"next-thought\" to={nextUrl}>\n                  {nextTitle} →\n              </Link>\n          )}\n            <Link className=\"all-thoughts\" to=\"/thoughts\">All Thoughts</Link>\n          </div>\n        </nav>\n    </div>\n  );\n};\n\nThoughtNavigation.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n};\n\nexport default ThoughtNavigation;","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport ThoughtAuthor from \"../components/thoughts/thought-author\"\nimport ThoughtNavigation from \"../components/thoughts/thought-navigation\"\nimport ThemeSwitcher from \"../components/theme/theme-switcher\"\nimport Layout from \"../components/theme/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../components/thoughts/thought-view.css\"\nimport \"../components/thoughts/thought-content.css\"\n\nexport default function Template({\n  data: {markdownRemark: {frontmatter, html, timeToRead}},\n  pageContext: { prevThought, nextThought }\n}) {\n  return (\n    <Layout>\n      <SEO title = {frontmatter.title + \" • Thoughts\"} className=\"thought-view-page\" />\n        <div className=\"thoughts-title\">\n          <Link to=\"/thoughts\">Thoughts</Link>\n        </div>\n        <article className=\"thought-wrapper\">\n          <h1>{frontmatter.title}</h1>\n          <div className=\"thought-details\">\n            <time className=\"thought-createdat\">{frontmatter.date}</time>\n            <span> • </span>\n            <span className=\"thought-time2read\">{timeToRead} min read</span>\n            <div className=\"theme-switcher\">\n              <ThemeSwitcher />\n            </div>\n          </div>\n          <div className=\"thought-divider\" />\n          <div\n              className=\"thought-content\"\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n        </article>\n        <aside className=\"thought-sidebar\">\n          <ThoughtAuthor />\n          <ThoughtNavigation prev={prevThought} next={nextThought} />\n        </aside>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      timeToRead\n      frontmatter {\n        date(formatString: \"MMM D, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}