{"version":3,"sources":["webpack:///./src/components/thoughts/thought-author.js","webpack:///./node_modules/gatsby-plugin-dark-mode/index.js","webpack:///./node_modules/gatsby-plugin-dark-mode/ThemeToggler.js","webpack:///./src/components/theme/logo.js","webpack:///./src/components/theme/footer.js","webpack:///./src/components/theme/theme-switcher.js","webpack:///./src/components/thoughts/thought-teaser.js","webpack:///./src/pages/thoughts.js"],"names":["ThoughtAuthor","className","_interopRequireDefault","require","exports","__esModule","_ThemeToggler","ThemeToggler","default","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_react","_propTypes","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","theme","window","__theme","_proto","prototype","componentDidMount","_this2","__onThemeChange","setState","toggleTheme","__setPreferredTheme","render","createElement","props","children","state","Component","propTypes","func","isRequired","_default","Logo","data","fluid","placeholderImage","childImageSharp","Footer","iconSize","Date","getFullYear","ThemeSwitcher","handleClick","e","checked","newState","classNames","onClick","type","aria-label","PureComponent","ThoughtTeaser","title","url","timeToRead","publishedHumanDate","publishedFullDate","excerpt","cover","to","dateTime","class","ThoughtListPage","edges","allMarkdownRemark","pagePath","description","keywords","meta","space","map","thought","key","node","id","frontmatter","path","humanDate","fullDate","pageQuery"],"mappings":"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","file":"component---src-pages-thoughts-js-338836d083d27d102d1f.js","sourcesContent":["import React from \"react\";\nimport Logo from \"../theme/logo\"\n\nimport \"./thought-author.css\"\n\nconst ThoughtAuthor = () => {\n  return (\n    <div className=\"thought-author-wrapper\">\n      <div className=\"logo\">\n        <div className=\"avatar\">\n          <Logo />\n        </div>\n      </div>\n      <div className=\"name\">• Roman Glushko •</div>\n      <p className=\"thought-section-descr\">My thoughts, pieces of advice and life experience <br />that will help you to <strong>overcome</strong> your life struggles</p>\n    </div>\n  );\n};\n\nexport default ThoughtAuthor;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\n\nvar _ThemeToggler = _interopRequireDefault(require(\"./ThemeToggler\"));\n\nexports.ThemeToggler = _ThemeToggler.default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ThemeToggler = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ThemeToggler, _React$Component);\n\n  function ThemeToggler() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      theme: typeof window !== 'undefined' ? window.__theme : null\n    });\n    return _this;\n  }\n\n  var _proto = ThemeToggler.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    window.__onThemeChange = function () {\n      _this2.setState({\n        theme: window.__theme\n      });\n    };\n  };\n\n  _proto.toggleTheme = function toggleTheme(theme) {\n    window.__setPreferredTheme(theme);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/_react.default.createElement(this.props.children, {\n      theme: this.state.theme,\n      toggleTheme: this.toggleTheme\n    });\n  };\n\n  return ThemeToggler;\n}(_react.default.Component);\n\nThemeToggler.propTypes = {\n  children: _propTypes.default.func.isRequired\n};\nvar _default = ThemeToggler;\nexports.default = _default;","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"homepage/photo.jpeg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 160) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img className=\"logo-img\" fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Logo","\nimport React from \"react\"\nimport SocialLinks from \"../homepage/social-links\"\n\nimport \"./footer.css\"\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"footer-wrapper\">\n        <SocialLinks iconSize=\"2x\" />\n        <div className=\"copyright\">\n          Roman Glushko © 1996 - {new Date().getFullYear()}\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { PureComponent } from 'react'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\n\nimport \"./theme-switcher.css\"\n\nexport default class ThemeSwitcher extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checked: false,\n    };\n  }\n\n  handleClick = (e) => {\n    const { checked, toggleTheme } = this.state\n    const newState = !checked;\n\n    this.setState({\n      checked: newState,\n    })\n\n    toggleTheme(newState ? 'dark' : 'light')\n  }\n\n  render = () => {\n    return (\n      <ThemeToggler>\n        {({ theme, toggleTheme }) => {\n\n          this.setState({\n            checked: theme === 'dark',\n            toggleTheme: toggleTheme,\n          })\n\n          const classNames =\n            'theme-switcher-toggler' +\n            (this.state.checked ? ' theme-switcher-toggler--checked' : '');\n\n          return (\n            <div\n              className={classNames}\n              onClick={this.handleClick}\n            >\n              <div className=\"theme-switcher-track\"></div>\n              <div className=\"theme-switcher-thumb\"></div>\n\n              <input\n                className=\"theme-switcher-input\"\n                type=\"checkbox\"\n                checked={theme === 'dark'}\n                aria-label=\"Switch between Dark and Light mode\"\n              />\n            </div>\n          )\n        }}\n      </ThemeToggler>\n    )\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport \"./thought-teaser.css\"\n\nconst ThoughtTeaser = (props) => {\n\n    const {\n        title,\n        url,\n        timeToRead,\n        publishedHumanDate,\n        publishedFullDate,\n        excerpt,\n        cover,\n    } = props;\n\n    return (\n        <article className=\"thought-item\">\n            <h2><Link to={url}>{title}</Link></h2>\n            <div className=\"thought-details\">\n                <time className=\"thought-createdat\" dateTime={publishedFullDate}>{publishedHumanDate}</time>\n                <span> • </span>\n                <span className=\"thought-time2read\">{timeToRead} min read</span>\n            </div>\n            <Link to={url}>\n                <div class=\"cover-filter\">\n                    <Img className=\"cover\" fluid={cover.childImageSharp.fluid} />\n                </div>\n            </Link>\n            <p className=\"thought-digest\">{excerpt}</p>\n        </article>\n    );\n};\n\nThoughtTeaser.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    timeToRead: PropTypes.number.isRequired,\n    publishedDate: PropTypes.string.isRequired,\n    excerpt: PropTypes.string.isRequired,\n}\n\nexport default ThoughtTeaser","import React, { Component } from 'react';\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/theme/layout\"\nimport SEO from \"../components/seo\"\nimport MainNavigation from \"../components/theme/main-navigation\"\nimport ThoughtAuthor from \"../components/thoughts/thought-author\"\nimport ThemeSwitcher from \"../components/theme/theme-switcher\"\nimport ThoughtTeaser from \"../components/thoughts/thought-teaser\"\nimport Footer from \"../components/theme/footer\"\n\nimport \"./thoughts.css\"\n\nclass ThoughtListPage extends Component {\n  render() {\n    const { data: { allMarkdownRemark: { edges } } } = this.props\n\n    return (\n      <Layout>\n        <SEO\n          title=\"Thoughts\"\n          pagePath=\"/thoughts/\"\n          className=\"thoughts-list-page\"\n          description=\"Thoughts and experience that will help you to go through your life in the very best way\"\n          keywords={[\n            'thoughts',\n            'opinion',\n            'life exploring',\n            'psychology',\n            'roman glushko thoughts',\n            'roman hlushko thoughts',\n            'life',\n            'people',\n            'management',\n          ]}\n          meta={[]}\n        />\n        <div className=\"thoughts-wrapper\">\n          <h1 className=\"thoughts-title\">Thoughts</h1>\n          <aside className=\"thought-sidebar\">\n            <ThoughtAuthor />\n            <MainNavigation space={\"thoughts\"} />\n            <div className=\"theme-switcher\">\n              <ThemeSwitcher />\n            </div>\n          </aside>\n          <main className=\"thoughts-list\">\n            {edges.map(thought => (\n              <ThoughtTeaser\n                key={thought.node.id}\n                title={thought.node.frontmatter.title}\n                url={thought.node.frontmatter.path}\n                timeToRead={thought.node.timeToRead}\n                publishedHumanDate={thought.node.frontmatter.humanDate}\n                publishedFullDate={thought.node.frontmatter.fullDate}\n                excerpt={thought.node.excerpt}\n                cover={thought.node.frontmatter.cover}\n              />\n            ))}\n          </main>\n          <div className=\"clearfix\" />\n        </div>\n        <Footer />\n      </Layout>\n    )\n  }\n}\n\nexport default ThoughtListPage\n\nexport const pageQuery = graphql`\n  query ThoughtListQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }, \n      filter: {\n        fileAbsolutePath: {regex: \"/(thoughts)/\"}\n        frontmatter: { \n          published: {eq: true}\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 100)\n          timeToRead\n          frontmatter {\n            humanDate: date(formatString: \"MMM D, YYYY\")\n            fullDate: date (formatString: \"YYYY-MM-DD\") \n            path\n            title\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 400) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}