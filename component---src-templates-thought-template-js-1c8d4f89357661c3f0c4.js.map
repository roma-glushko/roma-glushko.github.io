{"version":3,"sources":["webpack:///./src/templates/thoughtTemplate.js","webpack:///./src/components/thoughts/logo.js"],"names":["Template","data","markdownRemark","frontmatter","html","timeToRead","title","className","href","date","dangerouslySetInnerHTML","__html","pageQuery","Logo","fluid","placeholderImage","childImageSharp"],"mappings":"2FAAA,kKAOe,SAASA,EAAT,GAEX,IAAD,IADDC,KAAOC,eAAiBC,EACvB,EADuBA,YAAaC,EACpC,EADoCA,KAAMC,EAC1C,EAD0CA,WAG3C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAQ,WAAWC,UAAU,uBAClC,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBAAf,YACA,2BAAOA,UAAU,mBACjB,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,UACX,kBAAC,IAAD,QAGN,yBAAKA,UAAU,QAAf,iBACA,uBAAGA,UAAU,qBAAb,yCAAuE,6BAAvE,gCAAyG,sCAAzG,MAEF,yBAAKA,UAAU,cACX,uBAAGC,KAAK,aAAR,eAEJ,yBAAKD,UAAU,kBACX,kBAAC,IAAD,QAGJ,6BAASA,UAAU,mBACjB,4BAAKJ,EAAYG,OACjB,yBAAKC,UAAU,mBACb,0BAAMA,UAAU,qBAAqBJ,EAAYM,MACjD,qCACA,0BAAMF,UAAU,qBAAqBF,EAArC,cAEF,yBACIE,UAAU,kBACVG,wBAAyB,CAAEC,OAAQP,QAQ1C,IAAMQ,EAAS,c,4FCnBPC,IAhBF,WACT,IAAMZ,EAAI,OAYV,OAAO,kBAAC,IAAD,CAAKM,UAAU,WAAWO,MAAUb,EAAKc,iBAAiBC,gBAAgBF,U","file":"component---src-templates-thought-template-js-1c8d4f89357661c3f0c4.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/theme/layout\"\nimport SEO from \"../components/seo\"\nimport Logo from \"../components/thoughts/logo\"\nimport ThemeSwitcher from \"../components/theme/theme-switcher\"\n\nexport default function Template({\n  data: {markdownRemark: {frontmatter, html, timeToRead}}, // this prop will be injected by the GraphQL query below.\n}) {\n  \n  return (\n    <Layout>\n      <SEO title = \"Thoughts\" className=\"thoughts-view-page\" />\n      <div className=\"thoughts-wrapper\">\n        <div className=\"thoughts-title\">Thoughts</div>\n        <aside className=\"thought-sidebar\">\n        <div className=\"thought-author-wrapper\">\n          <div className=\"logo\">\n            <div className=\"avatar\">\n                <Logo />\n            </div>\n          </div>\n          <div className=\"name\">Roman Glushko</div>\n          <p className=\"thoughtbook-descr\">Unpopular and totally wrong thoughts. <br/> Yeah, I know it. And that's <span>fine</span>.</p>\n        </div>\n        <div className=\"navigation\">\n            <a href=\"/thoughts\">← Thoughts</a>\n        </div>\n        <div className=\"theme-switcher\">\n            <ThemeSwitcher />\n          </div>\n      </aside>\n        <article className=\"thought-wrapper\">\n          <h1>{frontmatter.title}</h1>\n          <div className=\"thought-details\">\n            <time className=\"thought-createdat\">{frontmatter.date}</time>\n            <span> • </span>\n            <span className=\"thought-time2read\">{timeToRead} min read</span>\n          </div>\n          <div\n              className=\"thought-content\"\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n        </article>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      timeToRead\n      frontmatter {\n        date(formatString: \"MMM D, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n    const data = useStaticQuery(graphql `\n    query {\n      placeholderImage: file(relativePath: { eq: \"homepage/photo.jpeg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n    return <Img className=\"logo-img\" fluid = { data.placeholderImage.childImageSharp.fluid } />\n}\n\nexport default Logo"],"sourceRoot":""}