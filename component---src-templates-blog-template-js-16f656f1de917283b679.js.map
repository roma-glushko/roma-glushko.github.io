{"version":3,"sources":["webpack:///./src/components/blog/blog-content-navigation.js","webpack:///./src/components/blog/blog-post.js","webpack:///./src/components/blog/blog-comments.js","webpack:///./src/components/blog/blog-navigation.js","webpack:///./src/components/blog/reading-analytics.js","webpack:///./src/components/blog/mathjax.js","webpack:///./src/templates/blogTemplate.js","webpack:///./src/components/theme/view-page-header.js"],"names":["BlogContentNavigation","props","state","componentDidMount","window","this","observer","IntersectionObserver","updateNavigation","bind","introSection","Array","from","document","querySelectorAll","contentSections","concat","forEach","section","observe","setState","render","activeSection","className","key","href","map","id","innerText","entries","entry","isIntersecting","intersectionRatio","target","getAttribute","React","Component","BlogPost","title","timeToRead","publishedHumanDate","publishedFullDate","keywords","contentHtml","cover","fluid","childImageSharp","dateTime","keyword","dangerouslySetInnerHTML","__html","BlogComments","commentBox","createRef","scriptEl","createElement","setAttribute","current","appendChild","ref","BlogNavigation","next","frontmatter","nextTitle","nextUrl","path","prev","prevTitle","prevUrl","rel","to","ReadingAnalytics","trackReadingStart","startSection","isReadingStarted","intializedAt","readingStartedAt","Date","getTime","secondsUntilStartedReading","Math","round","trackCustomEvent","category","action","label","value","trackReadingEnd","endSection","isReadingEnded","readingEndedAt","secondsUntilEndedReading","getReaderTypeByReadingTime","console","log","requestAnimationFrame","timeSpentReading","trackReading","sections","currentReadingSections","push","length","spentTimeReading","secondsReading","undefined","articleStart","getElementById","articleEnd","mainSections","subSections","allSections","readingStartObserver","readingEndObserver","readingObserver","MathJax","tex","inlineMath","displayMath","processEscapes","processEnvironments","options","skipHtmlTags","type","src","async","Template","data","pageContext","prevThought","nextThought","markdownRemark","humanDate","fullDate","html","rawMarkdownBody","excerpt","words","wordCount","pagePath","imagePath","ogType","description","meta","space","tags","datePublished","content","pageQuery","ViewPageHeader","spaceTitle","spaceLink","isListing"],"mappings":"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","file":"component---src-templates-blog-template-js-16f656f1de917283b679.js","sourcesContent":["import React from 'react'\n\nimport \"./blog-content-navigation.css\"\n\nclass BlogContentNavigation extends React.Component {\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            'activeSection': '',\n            'contentSections': [],\n        }\n    }\n\n    componentDidMount () {\n        if (typeof window === 'undefined') {\n            return\n        }\n        \n        this.observer = new IntersectionObserver(this.updateNavigation.bind(this));\n\n        const introSection = Array.from(document.querySelectorAll('#intro'))\n        const contentSections = Array.from(document.querySelectorAll('.content h2[id]'))\n\n        const allSections = introSection.concat(contentSections)\n\n        allSections.forEach(section => {\n            this.observer.observe(section);\n        });\n\n        this.setState({\n            'contentSections': contentSections,\n        })\n    }\n\n    render () {\n        const {contentSections, activeSection} = this.state\n\n        return <div className=\"blog-content-nav-wrapper\">\n            <ul className=\"blog-content-nav\">\n                <h2>Content</h2>\n                <li className={activeSection === 'intro' ? 'active': ''} key=\"intro\">\n                    <a href=\"#intro\">Intro</a>\n                </li> \n                {contentSections.map(section => (\n                <li className={activeSection === section.id ? 'active': ''} key={section.id}>\n                    <a href={`#${section.id}`}>{section.innerText}</a>\n                </li> \n                ))}\n            </ul>\n        </div>\n    }\n\n    updateNavigation (entries) {\n        entries.forEach(entry => {\n            if (!entry.isIntersecting || entry.intersectionRatio <= 0) {\n                return \n            }\n\n            this.setState({\n                'activeSection': entry.target.getAttribute('id'),\n            })\n        });\n    }\n    \n}\n\nexport default BlogContentNavigation","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Img from \"gatsby-image\"\n\nimport ThemeSwitcher from \"../theme/theme-switcher\"\nimport BlogContentNavigation from \"./blog-content-navigation\"\n\nimport \"./blog-post.css\"\nimport \"../theme/content.css\"\n\nconst BlogPost = (props) => {\n\n    const {\n        title,\n        timeToRead,\n        publishedHumanDate,\n        publishedFullDate,\n        keywords,\n        contentHtml,\n        cover,\n    } = props;\n\n    return (\n        <article className=\"blog-wrapper\">\n            <header>\n                <div className=\"cover-filter\">\n                    <Img className=\"cover\" fluid={ cover.childImageSharp.fluid } />\n                </div>\n                <h1>{title}</h1>\n                <div className=\"blog-details\">\n                    <time className=\"blog-createdat\" dateTime={publishedFullDate}>{publishedHumanDate}</time>\n                    <span> • </span>\n                    <span className=\"blog-time2read\">{timeToRead} min read</span>\n                    <div className=\"theme-switcher\">\n                        <ThemeSwitcher />\n                    </div>\n                </div>\n                <ul className=\"blog-tags\">\n                {keywords.map(keyword => (\n                    <li key={'tag-' + keyword}>{keyword}</li>\n                ))}\n                </ul>\n            </header>\n            <div id=\"intro\" className=\"blog-divider\" />\n            <div className=\"content-wrapper\">\n                <BlogContentNavigation />\n                <div\n                    className=\"content blog-content\"\n                    dangerouslySetInnerHTML={{ __html: contentHtml }}\n                />\n            </div>\n            <div id=\"content-end\" />\n        </article>\n    );\n};\n\nBlogPost.propTypes = {\n    title: PropTypes.string.isRequired,\n    timeToRead: PropTypes.number.isRequired,\n    publishedHumanDate: PropTypes.string.isRequired,\n    publishedFulDate: PropTypes.string.isRequired,\n    keywords: PropTypes.array.isRequired,\n    contentHtml: PropTypes.string.isRequired,\n  };\n\nexport default BlogPost;","import React, {Component} from \"react\";\n\n// https://www.vincentntang.com/installing-gatsbyjs-blog-comments/\nexport default class BlogComments extends Component {\n\n  constructor(props){ \n    super(props);\n    this.commentBox = React.createRef();\n  }\n  \n  componentDidMount () {\n    let scriptEl = document.createElement(\"script\");\n\n    scriptEl.setAttribute(\"src\", \"https://utteranc.es/client.js\");\n    scriptEl.setAttribute(\"crossorigin\", \"anonymous\");\n    scriptEl.setAttribute(\"async\", true);\n    scriptEl.setAttribute(\"label\", \"discussion💬\");\n    scriptEl.setAttribute(\"repo\", \"roma-glushko/romaglushkocom-discussions\");\n    scriptEl.setAttribute(\"issue-term\", \"pathname\");\n    scriptEl.setAttribute( \"theme\", \"github-light\");\n\n    this.commentBox.current.appendChild(scriptEl);\n  }\n\n  render() {\n    return (\n      <div ref={this.commentBox} className=\"comment-box\"></div>\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nimport \"./blog-navigation.css\"\n\nconst BlogNavigation = props => {\n\n  const {\n    next: {\n      frontmatter: { title: nextTitle, path: nextUrl } = {}\n    } = {},\n    prev: {\n      frontmatter: { title: prevTitle, path: prevUrl } = {}\n    } = {}\n  } = props;\n\n  return (\n    <div className=\"blog-navigation-wrapper\">\n      <h3>Read Other Posts</h3>\n      <nav className=\"blog-navigation\">\n        <div className=\"nav-links\">\n          {nextUrl && (\n            <Link rel=\"next\" className=\"next-post\" to={nextUrl}>\n              {nextTitle} →\n            </Link>\n          )}\n          {prevUrl && (\n            <Link rel=\"prev\" className=\"prev-post\" to={prevUrl}>\n              ← {prevTitle}\n            </Link>\n          )}\n          <Link className=\"all-posts\" to=\"/blog\">All Posts</Link>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nBlogNavigation.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n};\n\nexport default BlogNavigation;","import React from 'react'\nimport { trackCustomEvent } from \"gatsby-plugin-google-analytics\"\n\nclass ReadingAnalytics extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        'intializedAt': (new Date()).getTime(),\n        'isReadingStarted': false,\n        'readingStartedAt': undefined,\n        'isReadingEnded': false,\n        'readingEndedAt': undefined,\n    }\n  }\n\n    componentDidMount () {\n        if (typeof window === 'undefined') {\n            return\n        }\n\n        const articleStart = document.getElementById('intro')\n        const articleEnd = document.getElementById('content-end')\n\n        const mainSections = Array.from(document.querySelectorAll('.content h2[id]'))\n        const subSections = Array.from(document.querySelectorAll('.content h3[id]'))\n        const allSections = mainSections.concat(subSections)\n\n        this.readingStartObserver = new IntersectionObserver(this.trackReadingStart.bind(this));\n        this.readingEndObserver = new IntersectionObserver(this.trackReadingEnd.bind(this));\n        this.readingObserver = new IntersectionObserver(this.trackReading.bind(this));\n\n        allSections.forEach(section => {\n            this.readingObserver.observe(section);\n        });\n\n        this.readingStartObserver.observe(articleStart)\n        this.readingEndObserver.observe(articleEnd)\n    }\n\n    trackReadingStart = (startSection) => {\n        startSection = startSection[0]\n\n        if (!startSection.isIntersecting || startSection.intersectionRatio <= 0) {\n            return \n        }\n\n        const { isReadingStarted, intializedAt } = this.state\n\n        if (isReadingStarted) {\n            // already tracked start of reading\n            return\n        }\n\n        const readingStartedAt = (new Date()).getTime()\n        const secondsUntilStartedReading = Math.round((readingStartedAt - intializedAt) / 1000)\n\n        trackCustomEvent({\n            category: 'content',\n            action: 'startReading',\n            label: 'blog',\n            value: secondsUntilStartedReading,\n        })\n\n        this.setState({\n            'isReadingStarted': true,\n            'readingStartedAt': readingStartedAt,\n        })\n    }\n\n    trackReadingEnd = (endSection) => { \n        endSection = endSection[0]\n\n        if (!endSection.isIntersecting || endSection.intersectionRatio <= 0) {\n            return\n        }\n\n        const { isReadingEnded, readingStartedAt } = this.state\n\n        if (isReadingEnded) {\n            // already tracked end of reading\n            return\n        }\n\n        const readingEndedAt = (new Date()).getTime()\n\n        this.setState({\n            'isReadingEnded': true,\n            'readingEndedAt': readingEndedAt,\n        })\n\n        const secondsUntilEndedReading = Math.round((readingEndedAt - readingStartedAt) / 1000)\n\n        const readerType = this.getReaderTypeByReadingTime(secondsUntilEndedReading)\n\n        console.log('endReading: ', secondsUntilEndedReading)\n\n        window.requestAnimationFrame(() => {\n            trackCustomEvent({\n                category: 'content',\n                action: 'endReading',\n                label: 'blog',\n                value: secondsUntilEndedReading,\n            })\n        });\n    }\n\n    getReaderTypeByReadingTime = (timeSpentReading) => {\n        if (timeSpentReading >= 60) {\n            return 'reader'\n        }\n\n        return 'scanner'\n    }\n\n    trackReading = (sections) => {\n        const { isReadingStarted, isReadingEnded, readingStartedAt } = this.state\n\n        if (!isReadingStarted) {\n            return\n        }\n\n        if (isReadingEnded) {\n            return\n        }\n        \n        let currentReadingSections = []\n\n        sections.forEach(section => {\n            if (!section.isIntersecting || section.intersectionRatio <= 0) {\n                return \n            }\n\n            currentReadingSections.push(section.target.getAttribute('id'))\n        })\n\n        if (currentReadingSections.length === 0) {\n            return\n        }\n        \n        window.requestAnimationFrame(() => {\n            const spentTimeReading = (new Date()).getTime()\n            const secondsReading = Math.round((spentTimeReading - readingStartedAt) / 1000)\n\n            trackCustomEvent({\n                category: 'content',\n                action: 'reading',\n                label: 'blog',\n                value: secondsReading,\n            })\n        });\n    }\n\n    render = () => (<span></span>)\n}\n\nexport default ReadingAnalytics","import React from 'react'\nimport Helmet from \"react-helmet\"\n\n\nclass MathJax extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (typeof window !== 'undefined') {\n      window.MathJax = {\n        tex: {\n          inlineMath: [['$', '$'], ['\\\\(', '\\\\)']],\n          displayMath: [['$$', '$$'], ['[', ']']],\n          processEscapes: true,\n          processEnvironments: true\n        },\n        options: {\n          skipHtmlTags: ['script', 'noscript', 'style', 'textarea', 'pre']\n        }\n      }\n    }\n  }\n\n  render () {\n    return <div className=\"mathjax\">\n      <Helmet>\n        {/** hack from https://github.com/hanai/gatsby-remark-mathjax/issues/1 */}\n        <script\n          type=\"text/javascript\"\n          // src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"\n          src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n          async \n        />\n      </Helmet>\n    </div>\n  }\n  \n}\n\nexport default MathJax","import React from \"react\"\nimport { graphql } from \"gatsby\"\n \nimport ViewPageHeader from \"../components/theme/view-page-header\"\nimport MainNavigation from \"../components/theme/main-navigation\"\nimport BlogPost from \"../components/blog/blog-post\"\nimport BlogComments from \"../components/blog/blog-comments\"\nimport BlogNavigation from \"../components/blog/blog-navigation\"\nimport Layout from \"../components/theme/layout\"\nimport SEO from \"../components/seo\"\nimport ShareBlock from '../components/thoughts/share-block'\nimport ThoughtRichSnippet from \"../components/thoughts/thought-rich-snippet\"\nimport ReadingAnalytics from \"../components/blog/reading-analytics\"\nimport Footer from \"../components/theme/footer\"\n\nimport \"./blog-view.css\"\nimport MathJax from \"../components/blog/mathjax\"\n\nexport default function Template({ data, pageContext: { prevThought, nextThought } }) {\n  const {\n    markdownRemark: {\n      frontmatter: {\n        path,\n        title,\n        humanDate,\n        fullDate,\n        keywords,\n        cover\n      },\n      html,\n      rawMarkdownBody,\n      timeToRead,\n      excerpt,\n      wordCount: { words }\n    }\n  } = data\n\n  return (\n    <Layout>\n      <SEO\n        title={title + \" - Blog\"}\n        className=\"blogpost-view-page\"\n        pagePath={path}\n        imagePath={cover.childImageSharp.fluid.src}\n        ogType=\"article\"\n        description={excerpt}\n        keywords={keywords}\n        meta={[]}\n      />\n      <div className=\"blogpost-header\">\n        <ViewPageHeader />\n        <MainNavigation space={\"blog\"} />\n      </div>\n      <main>\n        <BlogPost title={title} timeToRead={timeToRead} publishedHumanDate={humanDate} publishedFullDate={fullDate} keywords={keywords} cover={cover} contentHtml={html} />\n        <ShareBlock title={title} path={path} tags={keywords} />\n        <BlogComments />\n      </main>\n      <aside className=\"blogpost-sidebar\">\n        <BlogNavigation prev={prevThought} next={nextThought} />\n      </aside>\n      <Footer />\n      <ThoughtRichSnippet\n        title={title}\n        datePublished={fullDate}\n        content={rawMarkdownBody}\n        wordCount={words}\n        keywords={keywords}\n        cover={cover}\n      />\n      <MathJax />\n      <ReadingAnalytics />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      timeToRead\n      excerpt\n      rawMarkdownBody\n      wordCount {\n        words\n      }\n      frontmatter {\n        path\n        humanDate: date(formatString: \"MMM D, YYYY\")\n        fullDate: date (formatString: \"YYYY-MM-DD\") \n        title\n        keywords\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 3400) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`","import React from 'react'\nimport { Link } from \"gatsby\"\nimport Logo from \"../theme/logo\"\n\nimport \"./view-page-header.css\"\n\n// todo: refactor name of the component. This header is placed not only on the view pages but on the listings\n\nconst ViewPageHeader = ({ spaceTitle, spaceLink, isListing = false }) => {\n  return (\n    <div className=\"view-page-header\">\n        <div className=\"view-page-header-wrapper\">\n          <div className=\"logo-wrapper\">\n              <div className=\"logo\">\n                  <Logo />\n              </div>\n              <div className=\"name\"><Link to=\"/blog/\">Roman <br /> Glushko</Link></div>\n          </div>\n          {isListing && <h1 className=\"blog-title\"><Link to={spaceLink}>{spaceTitle}</Link></h1>}\n          {!isListing && <h2 className=\"blog-title\"><Link to={spaceLink}>{spaceTitle}</Link></h2>}\n        </div>\n    </div>\n  )\n}\n\nexport default ViewPageHeader"],"sourceRoot":""}