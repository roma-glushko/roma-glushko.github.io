{"version":3,"sources":["webpack:///./src/components/nn-design/hero-header.js","webpack:///./src/pages/nn-design.js","webpack:///./src/components/theme/logo.js"],"names":["HeroHeader","id","className","NNDesignListPage","render","this","props","data","allMarkdownRemark","edges","title","pagePath","description","keywords","Component","pageQuery","Logo","fluid","placeholderImage","childImageSharp"],"mappings":"uxDAiBeA,G,UAXI,WACjB,OACE,yBAAKC,GAAG,cAAcC,UAAU,eAC9B,kBAAC,IAAD,MACA,wBAAIA,UAAU,SACZ,0BAAMA,UAAU,aAAhB,SADF,IAC2C,6BAD3C,0BACuE,6BADvE,IAC6E,0BAAMA,UAAU,aAAhB,mB,0BCD7EC,E,gLACJC,OAAA,WACqDC,KAAKC,MAAhDC,KAAQC,kBAAqBC,MAErC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,0CACNC,SAAS,gBACTT,UAAU,iBACVU,YAAY,iDACZC,SAAU,CACR,gBACA,qBAGJ,yBAAKX,UAAU,qBACb,2BAAOA,UAAU,qBACf,kBAAC,EAAD,OAEF,+BAGA,yBAAKA,UAAU,cAEjB,kBAAC,IAAD,Q,GAzBuBY,aAiClBC,GAFEZ,YAEO,c,mHCZPa,IAhBF,WACX,IAAMT,EAAI,OAYV,OAAO,kBAAC,IAAD,CAAKL,UAAU,WAAWe,MAAOV,EAAKW,iBAAiBC,gBAAgBF","file":"component---src-pages-nn-design-js-e35a33f9dadf461bb060.js","sourcesContent":["import React from 'react'\nimport { Link } from \"gatsby\"\nimport NNBackground from \"./nn-background.js\"\n\nimport \"./hero-header.css\"\n\nconst HeroHeader = () => {\n  return (\n    <div id=\"hero-header\" className=\"hero-header\">\n      <NNBackground />\n      <h1 className=\"title\">\n        <span className=\"highlight\">Learn</span> <br/> Neural Network Design <br/> <span className=\"subscript\">by examples</span>\n      </h1>\n    </div>\n  )\n}\n\nexport default HeroHeader","import React, { Component } from 'react';\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/theme/layout\"\nimport SEO from \"../components/seo\"\nimport BlogHeader from \"../components/blog/blog-header\"\nimport HeroBlock from \"../components/nn-design/hero-header\"\nimport Footer from \"../components/theme/footer\"\n\nimport \"./nn-design.css\"\n\nclass NNDesignListPage extends Component {\n  render() {\n    const { data: { allMarkdownRemark: { edges } } } = this.props\n\n    return (\n      <Layout>\n        <SEO\n          title=\"Catalog of Neural Network Architectures\"\n          pagePath=\"/deep-design/\"\n          className=\"blog-list-page\"\n          description=\"Learn Neural Network Architectures by examples\"\n          keywords={[\n            'deep networks',\n            'neural networks',\n          ]}\n        />\n        <div className=\"nn-design-wrapper\">\n          <aside className=\"nn-design-sidebar\">\n            <HeroBlock />\n          </aside>\n          <main>\n            \n          </main>\n          <div className=\"clearfix\" />\n        </div>\n        <Footer />\n      </Layout>\n    )\n  }\n}\n\nexport default NNDesignListPage\n\nexport const pageQuery = graphql`\n  query DeepDesignListQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }, \n      filter: {fileAbsolutePath: {regex: \"/(blog)/\"  }}\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 100)\n          timeToRead\n          frontmatter {\n            humanDate: date(formatString: \"MMM D, YYYY\")\n            fullDate: date (formatString: \"YYYY-MM-DD\") \n            path\n            title\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 620) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"homepage/photo.jpeg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 160) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img className=\"logo-img\" fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Logo"],"sourceRoot":""}