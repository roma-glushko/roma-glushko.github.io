{"version":3,"sources":["webpack:///./src/components/theme/breadcrumbs-rich-snippet.js","webpack:///./src/components/blog/blog-teaser.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/components/theme/logo.js","webpack:///./src/components/theme/footer.js","webpack:///./src/components/theme/view-page-header.js","webpack:///./src/components/theme/theme-switcher.js","webpack:///./src/pages/blog.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js"],"names":["BreadcrumbsRichSnippet","crumbs","siteUrl","site","siteMetadata","crumbItems","forEach","crumbItem","idx","Object","entries","path","title","push","schemaJSONLD","type","JSON","stringify","BlogTeaser","props","url","timeToRead","publishedHumanDate","publishedFullDate","excerpt","cover","keywords","className","to","fluid","childImageSharp","dateTime","map","keyword","key","$export","$entries","S","it","Logo","data","placeholderImage","Footer","iconSize","Date","getFullYear","rel","href","ViewPageHeader","spaceTitle","spaceLink","isListing","ThemeSwitcher","handleClick","e","state","checked","toggleTheme","newState","setState","render","theme","classNames","onClick","readOnly","aria-label","PureComponent","BlogListPage","this","socialImage","edges","allMarkdownRemark","pagePath","description","imagePath","publicURL","meta","space","length","node","id","frontmatter","humanDate","fullDate","Component","pageQuery","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","i","result","call"],"mappings":"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","file":"component---src-pages-blog-js-fab8373c7d697f156720.js","sourcesContent":["import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst BreadcrumbsRichSnippet = ({crumbs = []}) => {\n\n  const { site: { siteMetadata: { siteUrl } }} = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n              siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  let crumbItems = [\n    {\n      \"@type\": \"ListItem\",\n      \"position\": 1,\n      \"name\": \"Home\",\n      \"item\": `${siteUrl}/`,\n    }\n  ]\n\n  crumbs.forEach((crumbItem, idx) => {\n    const [[path, title]] = Object.entries(crumbItem)\n    \n    crumbItems.push({\n      \"@type\": \"ListItem\",\n      \"position\": idx + 2, // adjustment for the first home item which is in 1 position\n      \"name\": title,\n      \"item\": `${siteUrl}${path}`,\n    })\n  })\n\n  const schemaJSONLD = {\n    '@context': 'http://schema.org',\n    '@type': 'BreadcrumbList',\n    'itemListElement': crumbItems,\n  }\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">\n        {JSON.stringify(schemaJSONLD)}\n      </script>\n    </Helmet>\n  )\n}\n\nexport default BreadcrumbsRichSnippet\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport \"./blog-teaser.css\"\n\nconst BlogTeaser = (props) => {\n\n    const {\n        title,\n        url,\n        timeToRead,\n        publishedHumanDate,\n        publishedFullDate,\n        excerpt,\n        cover,\n        keywords,\n    } = props;\n\n    return (\n        <article className=\"blog-item\">\n            <Link className=\"article-header\" to={url}>\n                <div className=\"cover-filter\">\n                    <Img className=\"cover\" fluid={cover.childImageSharp.fluid} />\n                </div>\n            </Link>\n            <div className=\"article-details\">\n                <h2><Link to={url}>{title}</Link></h2>\n                <div className=\"blog-details\">\n                    <time className=\"blog-created-at\" dateTime={publishedFullDate}>{publishedHumanDate}</time>\n                    <span> • </span>\n                    <span className=\"blog-time2read\">{timeToRead} min read</span>\n                </div>\n                <p className=\"blog-digest\">{excerpt}</p>\n                <ul className=\"blog-tags\">\n                    {keywords.map(keyword => (\n                        <li key={url + keyword}>{keyword}</li>\n                    ))}\n                </ul>\n            </div>\n        </article>\n    );\n};\n\nBlogTeaser.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    timeToRead: PropTypes.number.isRequired,\n    publishedDate: PropTypes.string.isRequired,\n    excerpt: PropTypes.string.isRequired,\n  };\n\nexport default BlogTeaser;","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Logo = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"homepage/photo3.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 160) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return <Img className=\"logo-img\" fluid={data.placeholderImage.childImageSharp.fluid} />\n}\n\nexport default Logo","\nimport React from \"react\"\nimport SocialLinks from \"../homepage/social-links\"\n\nimport \"./footer.css\"\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"footer-wrapper\">\n        <SocialLinks iconSize=\"2x\" />\n        <div className=\"copyright\">\n          Roman Glushko © 1996 - {new Date().getFullYear()} < br/>\n          <a rel=\"license\" href=\"https://creativecommons.org/licenses/by/4.0/\" title=\"Content is published under CC BY 4.0 license\">CC BY 4.0</a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;","import React from 'react'\nimport Logo from \"../theme/logo\"\n\nimport \"./view-page-header.css\"\n\n// todo: refactor name of the component. This header is placed not only on the view pages but on the listings\n\nconst ViewPageHeader = ({ spaceTitle, spaceLink, isListing = false }) => {\n  return (\n    <div className=\"view-page-header\">\n        <div className=\"view-page-header-wrapper\">\n          <div className=\"logo-wrapper\">\n              <div className=\"logo\">\n                  <Logo />\n              </div>\n              <div className=\"name\"><a href={spaceLink} title=\"back to blog\">Roman <br /> Glushko</a></div>\n          </div>\n          {isListing && <h1 className=\"blog-title\"><a href={spaceLink} title=\"back to the homepage\">{spaceTitle}</a></h1>}\n          {!isListing && <h2 className=\"blog-title\"><a href={spaceLink} title=\"back to the homepage\">{spaceTitle}</a></h2>}\n        </div>\n    </div>\n  )\n}\n\nexport default ViewPageHeader","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { PureComponent } from 'react'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\n\nimport \"./theme-switcher.css\"\n\nexport default class ThemeSwitcher extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checked: false,\n    };\n  }\n\n  handleClick = (e) => {\n    const { checked, toggleTheme } = this.state\n    const newState = !checked;\n\n    this.setState({\n      checked: newState,\n    })\n\n    toggleTheme(newState ? 'dark' : 'light')\n  }\n\n  render = () => {\n    return (\n      <ThemeToggler>\n        {({ theme, toggleTheme }) => {\n\n          this.setState({\n            checked: theme === 'dark',\n            toggleTheme: toggleTheme,\n          })\n\n          const classNames =\n            'theme-switcher-toggler' +\n            (this.state.checked ? ' theme-switcher-toggler--checked' : '');\n\n          return (\n            <div\n              className={classNames}\n              onClick={this.handleClick}\n            >\n              <div className=\"theme-switcher-track\"></div>\n              <div className=\"theme-switcher-thumb\"></div>\n\n              <input\n                className=\"theme-switcher-input\"\n                type=\"checkbox\"\n                checked={theme === 'dark'}\n                readOnly={true}\n                aria-label=\"Switch between Dark and Light mode\"\n              />\n            </div>\n          )\n        }}\n      </ThemeToggler>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/theme/layout\"\nimport SEO from \"../components/seo\"\nimport ViewPageHeader from \"../components/theme/view-page-header\"\nimport MainNavigation from \"../components/theme/main-navigation\"\nimport BlogTeaser from \"../components/blog/blog-teaser\"\nimport ThemeSwitcher from \"../components/theme/theme-switcher\"\nimport BreadcrumbsRichSnippet from \"../components/theme/breadcrumbs-rich-snippet\"\nimport Footer from \"../components/theme/footer\"\n\nimport \"./blog.css\"\n\nclass BlogListPage extends Component {\n  render() {\n    const { data: { socialImage, allMarkdownRemark: { edges } } } = this.props\n\n    return (\n      <Layout>\n        <SEO\n          title=\"Blog\"\n          pagePath=\"/blog/\"\n          className=\"blog-list-page\"\n          description=\"Technical blog about machine learning, data science, math and software engineering\"\n          imagePath={socialImage.publicURL}\n          keywords={[\n            'technical blog',\n            'machine learning blog',\n            'math',\n            'engineering',\n            'data science',\n            'roman glushko blog',\n            'roma glushko blog',\n          ]}\n          meta={[]}\n        />\n        <div className=\"blog-listing-wrapper\">\n          <aside className=\"blog-sidebar\">\n            <div className=\"blog-header\">\n              <ViewPageHeader spaceTitle=\"Blog\" spaceLink=\"/blog/\" isListing={true} />\n              <MainNavigation space={\"blog\"} />\n            </div>\n            <div className=\"blog-intro\">\n              Technical notes about machine learning, data science, math and software engineering. Recording what I learn everyday.\n            </div>\n            <div className=\"misc\">\n              <div className=\"theme-switcher\">\n                <ThemeSwitcher />\n              </div>\n            </div>\n          </aside>\n          <main className={`blog-list blog-grid ${!edges.length ? \"no-posts\" : \"\"}`}>\n            {!edges.length && (\n            <div className=\"no-posts-placeholder\">\n              Great posts will be here as soon as my muse comes back to me 💫 <br />\n              Come back soon 👋\n            </div> )}\n            {edges.map(({node}) => (\n              <BlogTeaser\n                key={node.id}\n                title={node.frontmatter.title}\n                url={node.frontmatter.path}\n                timeToRead={node.timeToRead}\n                publishedHumanDate={node.frontmatter.humanDate}\n                publishedFullDate={node.frontmatter.fullDate}\n                excerpt={node.frontmatter.excerpt}\n                cover={node.frontmatter.cover}\n                keywords={node.frontmatter.keywords}\n              />\n            ))}\n          </main>\n          <div className=\"clearfix\" />\n        </div>\n        <Footer />\n        <BreadcrumbsRichSnippet crumbs={[{'/blog/': 'Blog'}]} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogListPage\n\nexport const pageQuery = graphql`\n  query BlogListQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }, \n      filter: {\n        fileAbsolutePath: {regex: \"/(blog)/\"}\n        frontmatter: { \n          published: {eq: true}\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          timeToRead\n          frontmatter {\n            humanDate: date(formatString: \"MMM D, YYYY\")\n            fullDate: date (formatString: \"YYYY-MM-DD\") \n            path\n            title\n            keywords\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 620) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    socialImage: file(relativePath: { eq: \"blog/roman-glushko-in-the-process-of-work.jpg\" }) {\n      publicURL\n    }\n  }\n`","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}