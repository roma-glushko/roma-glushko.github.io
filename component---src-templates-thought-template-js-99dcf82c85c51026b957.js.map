{"version":3,"file":"component---src-templates-thought-template-js-99dcf82c85c51026b957.js","mappings":"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","sources":["webpack://romaglushko.com/./src/components/blog/newsletter-form.tsx","webpack://romaglushko.com/./src/components/thoughts/thought-author.tsx","webpack://romaglushko.com/./src/components/thoughts/thought.js","webpack://romaglushko.com/./src/components/thoughts/thought-navigation.js","webpack://romaglushko.com/./src/templates/thoughtTemplate.js"],"sourcesContent":["import * as React from \"react\"\n\nimport \"./newsletter-form.css\"\n\nconst NewsletterForm = (): JSX.Element => {\n  return (\n    <div data-nosnippet=\"\" className=\"newsletter-form\">\n      <iframe\n        src=\"https://romanglushko.substack.com/embed\"\n        loading=\"lazy\"\n        width=\"100%\"\n        height=\"320\"\n        style={{ border: \"1px solid #EEE\" }}\n        frameBorder=\"0\"\n        scrolling=\"no\"\n        title=\"Newsletter Form\"\n      />\n    </div>\n  )\n}\n\nexport default NewsletterForm\n","import * as React from \"react\"\nimport Logo from \"../theme/logo\"\n\nimport \"./thought-author.css\"\n\nconst ThoughtAuthor = (): JSX.Element => {\n  return (\n    <div className=\"thought-author-wrapper\">\n      <div className=\"logo\">\n        <div className=\"avatar\">\n          <Logo />\n        </div>\n      </div>\n      <div className=\"name\">• Roman Glushko •</div>\n      <p className=\"thought-section-descr\">\n        My thoughts, pieces of advice and life experience <br />\n        that will help you to <strong>overcome</strong> your life struggles\n      </p>\n    </div>\n  )\n}\n\nexport default ThoughtAuthor\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport MainNavigation from \"../main-navigation\"\nimport ThemeSwitcher from \"../theme/theme-switcher\"\nimport ReadingTracker, { ContentTypes } from \"../analytics/reading-tracker\"\n\nimport \"./thought.css\"\nimport \"../theme/content.css\"\n\nconst Thought = (props) => {\n  const {\n    title,\n    timeToRead,\n    publishedHumanDate,\n    publishedFullDate,\n    contentHtml,\n    cover,\n    coverCredits,\n  } = props\n\n  return (\n    <article className=\"thought-wrapper\">\n      <header>\n        <figure className=\"cover\">\n          <div className=\"cover-filter\">\n            <GatsbyImage\n              className=\"cover cover-image\"\n              image={cover}\n              alt={title}\n            />\n          </div>\n          <figcaption\n            className=\"image-title\"\n            dangerouslySetInnerHTML={{ __html: coverCredits }}\n          />\n        </figure>\n        <MainNavigation space={\"thoughts\"} />\n        <h1>{title}</h1>\n        <div data-nosnippet=\"\" className=\"thought-details\">\n          <time className=\"thought-createdat\" dateTime={publishedFullDate}>\n            {publishedHumanDate}\n          </time>\n          <span> • </span>\n          <span className=\"thought-time2read\">\n            {timeToRead}\n            {timeToRead > 1 ? \"mins\" : \"min\"} read\n          </span>\n          <div className=\"theme-switcher\">\n            <ThemeSwitcher />\n          </div>\n        </div>\n      </header>\n      <div className=\"thought-divider\" />\n      <ReadingTracker contentType={ContentTypes.THOUGHT}>\n        <div\n          className=\"content thought-content\"\n          dangerouslySetInnerHTML={{ __html: contentHtml }}\n        />\n      </ReadingTracker>\n    </article>\n  )\n}\n\nThought.propTypes = {\n  title: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  publishedHumanDate: PropTypes.string.isRequired,\n  publishedFullDate: PropTypes.string.isRequired,\n  contentHtml: PropTypes.string.isRequired,\n}\n\nexport default Thought\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nimport \"./thought-navigation.css\"\n\nconst ThoughtNavigation = (props) => {\n  const {\n    next: { frontmatter: { title: nextTitle, path: nextUrl } = {} } = {},\n    prev: { frontmatter: { title: prevTitle, path: prevUrl } = {} } = {},\n  } = props\n\n  return (\n    <div className=\"thought-navigation-wrapper\">\n      <nav className=\"thought-navigation\">\n        <div className=\"nav-links\">\n          {nextUrl && (\n            <Link rel=\"next\" className=\"next-thought\" to={nextUrl}>\n              {nextTitle} →\n            </Link>\n          )}\n          {prevUrl && (\n            <Link rel=\"prev\" className=\"prev-thought\" to={prevUrl}>\n              ← {prevTitle}\n            </Link>\n          )}\n          <Link className=\"all-thoughts\" to=\"/thoughts/\">\n            All Thoughts\n          </Link>\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nThoughtNavigation.propTypes = {\n  next: PropTypes.object,\n  prev: PropTypes.object,\n}\n\nexport default ThoughtNavigation\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport ThoughtAuthor from \"../components/thoughts/thought-author\"\nimport Thought from \"../components/thoughts/thought\"\nimport ThoughtNavigation from \"../components/thoughts/thought-navigation\"\nimport Layout from \"../components/theme/layout\"\nimport Footer from \"../components/footer\"\nimport Seo from \"../components/seo/seo\"\nimport NewsletterForm from \"../components/blog/newsletter-form\"\nimport ShareBlock from \"../components/thoughts/share-block\"\nimport BreadcrumbsSnippet from \"../components/seo/breadcrumbs-snippet\"\nimport ArticleRichSnippet from \"../components/seo/article-snippet\"\n\nimport \"./ThoughtView.css\"\n\nexport default function Template({\n  data,\n  pageContext: { prevThought, nextThought },\n}) {\n  const {\n    markdownRemark: {\n      frontmatter: {\n        path,\n        title,\n        humanDate,\n        fullDate,\n        keywords,\n        cover: {\n          childImageSharp: { gatsbyImageData },\n        },\n        coverCredits,\n      },\n      html,\n      rawMarkdownBody,\n      timeToRead,\n      excerpt,\n      wordCount: { words },\n    },\n  } = data\n\n  return (\n    <Layout>\n      <Seo\n        title={`${title} - Thoughts`}\n        className=\"thought-view-page\"\n        pagePath={path}\n        imagePath={gatsbyImageData.images.fallback.src}\n        ogType=\"article\"\n        description={excerpt}\n        keywords={keywords}\n        meta={[]}\n      />\n      <div className=\"thoughts-title\">\n        <Link to=\"/thoughts/\">Thoughts</Link>\n      </div>\n      <main>\n        <Thought\n          title={title}\n          timeToRead={timeToRead}\n          publishedHumanDate={humanDate}\n          publishedFullDate={fullDate}\n          cover={gatsbyImageData}\n          coverCredits={coverCredits}\n          contentHtml={html}\n        />\n        <ShareBlock title={title} path={path} tags={keywords} />\n        <NewsletterForm />\n      </main>\n      <aside className=\"thought-sidebar\">\n        <ThoughtAuthor />\n        <ThoughtNavigation prev={prevThought} next={nextThought} />\n      </aside>\n      <Footer />\n      <ArticleRichSnippet\n        title={title}\n        path={path}\n        datePublished={fullDate}\n        dateModified={fullDate} // gitLogLatestDate\n        content={rawMarkdownBody}\n        wordCount={words}\n        keywords={keywords}\n        cover={gatsbyImageData}\n        articleSection={\"Thoughts\"}\n        genre={[\n          \"self-improvement\",\n          \"management\",\n          \"thoughts\",\n          \"life experience\",\n          \"life exploration\",\n        ]}\n      />\n      <BreadcrumbsSnippet\n        crumbs={[{ \"/thoughts/\": \"Thoughts\" }, { [path]: title }]}\n      />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      timeToRead\n      excerpt\n      rawMarkdownBody\n      wordCount {\n        words\n      }\n      frontmatter {\n        id\n        path\n        humanDate: date(formatString: \"MMM D, YYYY\")\n        fullDate: date(formatString: \"YYYY-MM-DD\")\n        title\n        keywords\n        cover {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED)\n          }\n        }\n        coverCredits\n      }\n    }\n  }\n`\n"],"names":["React","className","src","loading","width","height","style","border","frameBorder","scrolling","title","Logo","props","timeToRead","publishedHumanDate","publishedFullDate","contentHtml","cover","coverCredits","G","image","alt","dangerouslySetInnerHTML","__html","space","dateTime","contentType","ContentTypes","next","frontmatter","nextTitle","nextUrl","path","prev","prevTitle","prevUrl","Link","rel","to","Template","data","pageContext","prevThought","nextThought","markdownRemark","humanDate","fullDate","keywords","gatsbyImageData","childImageSharp","html","rawMarkdownBody","excerpt","words","wordCount","pagePath","imagePath","images","fallback","ogType","description","meta","tags","datePublished","dateModified","content","articleSection","genre","crumbs"],"sourceRoot":""}